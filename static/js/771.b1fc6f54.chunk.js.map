{"version":3,"file":"static/js/771.b1fc6f54.chunk.js","mappings":"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","sources":["webpack://vacation-time/./src/components/common/backdrop/Backdrop.module.scss?35f3","components/common/backdrop/Backdrop.js","webpack://vacation-time/./src/components/formik/Formik.module.scss?9562","components/formik/FormikDatePicker.js","components/formik/FormikInput.js","components/formik/FormikMaskedInput.js","components/formik/FormikSelect.js","components/formik/FormikControl.js","webpack://vacation-time/./src/components/forms/loginForm/LoginForm.module.scss?9364","components/forms/loginForm/LoginForm.js","webpack://vacation-time/./src/pages/pageLogin/PageLogin.module.scss?e60a","pages/pageLogin/PageLogin.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"backdrop\":\"Backdrop_backdrop__fV1mH\",\"backLink\":\"Backdrop_backLink__4B1A4\",\"content\":\"Backdrop_content__e-MJM\",\"toggleButton\":\"Backdrop_toggleButton__ddVPm\"};","import { useRef } from 'react';\n\nimport { Link, useLocation } from 'react-router-dom';\nimport styles from './Backdrop.module.scss';\n\nconst Backdrop = ({ children }) => {\n  const location = useLocation();\n  const backLinkHref = useRef(location.state?.from ?? '/');\n\n  return (\n    <div className={styles.backdrop}>\n      <Link className={styles.backLink} to={backLinkHref.current} />\n      <div className={styles.content}>{children}</div>\n    </div>\n  );\n};\n\nexport default Backdrop;\n","// extracted by mini-css-extract-plugin\nexport default {\"control\":\"Formik_control__F96Aj\",\"label\":\"Formik_label__PQ4oW\",\"icon\":\"Formik_icon__O+hiU\",\"error\":\"Formik_error__VykRM\"};","import { ErrorMessage, Field } from 'formik';\nimport DateView from 'react-datepicker';\nimport styles from './Formik.module.scss';\n\nconst FormikDatePicker = props => {\n  const { label, name, ...rest } = props;\n\n  return (\n    <div className={styles.control}>\n      <label className={styles.label} htmlFor={name}>\n        {label}\n      </label>\n      <Field name={name} autocomplete=\"off\">\n        {({ form, field }) => {\n          const { setFieldValue } = form;\n          const { value } = field;\n\n          return (\n            <DateView\n              id={name}\n              {...field}\n              {...rest}\n              showIcon\n              calendarIconClassname={styles.icon}\n              toggleCalendarOnIconClick\n              selected={value}\n              placeholderText=\"dd.MM.yyyy\"\n              dateFormat=\"dd.MM.yyyy\"\n              autocomplete=\"off\"\n              onChange={val => setFieldValue(name, val)}\n            />\n          );\n        }}\n      </Field>\n      <ErrorMessage name={name} component=\"p\" className={styles.error} />\n    </div>\n  );\n};\n\nexport default FormikDatePicker;\n","import { ErrorMessage, Field } from 'formik';\nimport styles from './Formik.module.scss';\n\nconst FormikInput = props => {\n  const { label, name, ...rest } = props;\n  return (\n    <div className={styles.control}>\n      <label className={styles.label} htmlFor={name}>\n        {label}\n      </label>\n      <Field id={name} name={name} {...rest} />\n      <ErrorMessage name={name} component=\"p\" className={styles.error} />\n    </div>\n  );\n};\n\nexport default FormikInput;\n","import { ErrorMessage, Field } from 'formik';\nimport { InputMask } from 'primereact/inputmask';\nimport styles from './Formik.module.scss';\n\nconst FormikMaskedInput = props => {\n  const { label, name, ...rest } = props;\n\n  return (\n    <div className={styles.control}>\n      <label className={styles.label} htmlFor={name}>\n        {label}\n      </label>\n      <Field name={name}>\n        {({ field }) => {\n          return (\n            <InputMask\n              {...field}\n              {...rest}\n              id={name}\n              mask=\"+38(099) 999-9999\"\n              placeholder=\"+38(099) 999-9999\"\n            ></InputMask>\n          );\n        }}\n      </Field>\n      <ErrorMessage name={name} component=\"p\" className={styles.error} />\n    </div>\n  );\n};\n\nexport default FormikMaskedInput;\n","import { ErrorMessage, Field } from 'formik';\nimport Select from 'react-select';\nimport styles from './Formik.module.scss';\n\nconst customStyles = {\n  control: provided => ({\n    ...provided,\n    flex: '1',\n    height: '100%',\n    marginLeft: '-11px',\n    cursor: 'pointer',\n    border: 'none',\n    backgroundColor: '#fff',\n    boxShadow: 'none',\n  }),\n  option: provided => ({\n    ...provided,\n    cursor: 'pointer',\n    color: 'inherit',\n    borderBottom: '1px solid #ddd',\n    backgroundColor: 'inherit',\n\n    '&:last-child': {\n      borderBottom: 'none',\n    },\n\n    '&:hover': {\n      backgroundColor: '#444765',\n      color: '#fff',\n    },\n  }),\n  menu: provided => ({\n    ...provided,\n    left: '0',\n  }),\n};\n\nconst FormikSelect = props => {\n  const { label, name, options, ...rest } = props;\n\n  return (\n    <div className={styles.control}>\n      <label className={styles.label} htmlFor={name}>\n        {label}\n      </label>\n      <Field name={name}>\n        {({ field, form }) => (\n          <Select\n            inputId={name}\n            {...rest}\n            {...field}\n            options={options}\n            styles={customStyles}\n            name={name}\n            value={options.find(option => option.value === field.value)}\n            onChange={option => form.setFieldValue(name, option.value)}\n            onBlur={field.onBlur}\n          />\n        )}\n      </Field>\n\n      <ErrorMessage name={name} component=\"p\" className={styles.error} />\n    </div>\n  );\n};\n\nexport default FormikSelect;\n","import FormikDatePicker from './FormikDatePicker';\nimport FormikInput from './FormikInput';\nimport FormikMaskedInput from './FormikMaskedInput';\nimport FormikSelect from './FormikSelect';\n\nconst FormikControl = props => {\n  const { control, ...rest } = props;\n\n  switch (control) {\n    case 'input':\n      return <FormikInput {...rest} />;\n    case 'select':\n      return <FormikSelect {...rest} />;\n    case 'date':\n      return <FormikDatePicker {...rest} />;\n    case 'phone':\n      return <FormikMaskedInput {...rest} />;\n    default:\n      return null;\n  }\n};\n\nexport default FormikControl;\n","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"LoginForm_form__qXknD\",\"title\":\"LoginForm_title__8yDbg\",\"input\":\"LoginForm_input__QVIQ2\",\"error\":\"LoginForm_error__FIsBr\",\"button\":\"LoginForm_button__wGRfV\"};","import { Form, Formik } from 'formik';\nimport { object, string } from 'yup';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { login } from '../../../redux/auth/operations';\nimport FormikControl from 'components/formik/FormikControl';\nimport styles from './LoginForm.module.scss';\n\nconst schema = object({\n  email: string().trim().required('Email is a required field'),\n  password: string().trim().required('Password is a required field'),\n});\n\nconst LoginForm = () => {\n  const dispatch = useDispatch();\n  const { error } = useSelector(state => state.auth);\n\n  const initialValues = {\n    email: '',\n    password: '',\n  };\n\n  const handleSubmit = (values, actions) => {\n    dispatch(login(values));\n    actions.resetForm();\n  };\n\n  return (\n    <Formik\n      initialValues={initialValues}\n      validationSchema={schema}\n      onSubmit={handleSubmit}\n    >\n      <Form className={styles.form}>\n        <h1 className={styles.title}>User Log in</h1>\n        <FormikControl\n          className={styles.input}\n          control=\"input\"\n          type=\"email\"\n          label=\"Email\"\n          name=\"email\"\n        />\n        <FormikControl\n          className={styles.input}\n          control=\"input\"\n          type=\"password\"\n          label=\"Password\"\n          name=\"password\"\n        />\n        {error && <p className={styles.error}>Incorrect password or email</p>}\n        <button className={styles.button} type=\"submit\">\n          Log in\n        </button>\n      </Form>\n    </Formik>\n  );\n};\n\nexport default LoginForm;\n","// extracted by mini-css-extract-plugin\nexport default {\"backdrop\":\"PageLogin_backdrop__Sptnm\",\"backLink\":\"PageLogin_backLink__m2l3f\",\"content\":\"PageLogin_content__g5gIe\",\"toggleButton\":\"PageLogin_toggleButton__J87Im\"};","import { Link } from 'react-router-dom';\nimport LoginForm from 'components/forms/loginForm';\nimport Backdrop from 'components/common/backdrop';\nimport styles from './PageLogin.module.scss';\n\nconst PageLogin = () => {\n  return (\n    <Backdrop>\n      <LoginForm />\n      <Link to=\"/register\" className={styles.toggleButton}>\n        Register\n      </Link>\n    </Backdrop>\n  );\n};\n\nexport default PageLogin;\n"],"names":["_ref","_location$state$from","_location$state","children","location","useLocation","backLinkHref","useRef","state","from","_jsxs","className","styles","_jsx","Link","to","current","props","label","name","rest","htmlFor","Field","autocomplete","form","field","setFieldValue","value","DateView","id","showIcon","calendarIconClassname","toggleCalendarOnIconClick","selected","placeholderText","dateFormat","onChange","val","ErrorMessage","component","InputMask","mask","placeholder","customStyles","control","provided","flex","height","marginLeft","cursor","border","backgroundColor","boxShadow","option","color","borderBottom","menu","left","options","Select","inputId","find","onBlur","FormikInput","FormikSelect","FormikDatePicker","FormikMaskedInput","schema","object","email","string","trim","required","password","LoginForm","dispatch","useDispatch","error","useSelector","auth","Formik","initialValues","validationSchema","onSubmit","handleSubmit","values","actions","login","resetForm","Form","FormikControl","type","PageLogin","Backdrop"],"sourceRoot":""}