{"version":3,"file":"static/js/672.27e6f9c2.chunk.js","mappings":"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","sources":["components/formik/FormikDatePicker.js","components/formik/FormikInput.js","components/formik/FormikSelect.js","components/formik/FormikControl.js","webpack://vacation-time/./src/components/sectionMainPoster/SectionMainPoster.module.scss?fc2f","components/sectionMainPoster/SectionMainPoster.js","webpack://vacation-time/./src/components/slideSwiper/SlideSwiper.module.scss?06bb","components/slideSwiper/SlideSwiper.js","components/feedbackForm/FeedbackForm.js","webpack://vacation-time/./src/components/sectionSecondPoster/SectionSecondPoster.module.scss?1c8e","components/sectionSecondPoster/SectionSecondPoster.js","pages/pageHome/PageHome.js"],"sourcesContent":["import { ErrorMessage, Field } from 'formik';\nimport DateView from 'react-datepicker';\n\nconst FormikDatePicker = props => {\n  const { label, name, ...rest } = props;\n\n  return (\n    <div className=\"form-control\">\n      <label className=\"form-label\" htmlFor={name}>\n        {label}\n      </label>\n      <Field name={name}>\n        {({ form, field }) => {\n          const { setFieldValue } = form;\n          const { value } = field;\n\n          return (\n            <DateView\n              id={name}\n              {...field}\n              {...rest}\n              selected={value}\n              autocomplete=\"off\"\n              dateFormat=\"dd.MM.yyyy\"\n              onChange={val => setFieldValue(name, val)}\n            />\n          );\n        }}\n      </Field>\n      <ErrorMessage name={name} component=\"p\" className=\"error\" />\n    </div>\n  );\n};\n\nexport default FormikDatePicker;\n","import { ErrorMessage, Field } from 'formik';\nimport './Formik.scss';\n\nconst FormikInput = props => {\n  const { label, name, ...rest } = props;\n  return (\n    <div className=\"form-control\">\n      <label className=\"form-label\" htmlFor={name}>\n        {label}\n      </label>\n      <Field id={name} name={name} {...rest} />\n      <ErrorMessage name={name} component=\"p\" className=\"error\" />\n    </div>\n  );\n};\n\nexport default FormikInput;\n","import { ErrorMessage, Field } from 'formik';\n\nconst FormikSelect = props => {\n  const { label, name, options, ...rest } = props;\n\n  return (\n    <div className=\"form-control\">\n      <label className=\"form-label\" htmlFor={name}>\n        {label}\n      </label>\n      <Field as=\"select\" id={name} name={name} {...rest}>\n        <option value=\"not selected\">Not selected</option>\n        <option value=\"male\">Male</option>\n        <option value=\"female\">Female</option>\n      </Field>\n      <ErrorMessage name={name} component=\"p\" className=\"error\" />\n    </div>\n  );\n};\n\nexport default FormikSelect;\n","import FormikDatePicker from './FormikDatePicker';\nimport FormikInput from './FormikInput';\nimport FormikSelect from './FormikSelect';\n\nconst FormikControl = props => {\n  const { control, ...rest } = props;\n\n  switch (control) {\n    case 'input':\n      return <FormikInput {...rest} />;\n    case 'select':\n      return <FormikSelect {...rest} />;\n    case 'date':\n      return <FormikDatePicker {...rest} />;\n    default:\n      return null;\n  }\n};\n\nexport default FormikControl;\n","// extracted by mini-css-extract-plugin\nexport default {\"content\":\"SectionMainPoster_content__RY2dv\",\"title\":\"SectionMainPoster_title__Y5U2H\",\"subTitle\":\"SectionMainPoster_subTitle__Cxk2R\"};","import { useTranslation } from 'react-i18next';\nimport scss from './SectionMainPoster.module.scss';\n\nconst SectionMainPoster = () => {\n  const { t } = useTranslation();\n\n  return (\n    <section className={scss['main-poster']}>\n      <div className=\"container\">\n        <div className={scss.content}>\n          <h1 className={scss.title}>VacationTime</h1>\n          <h2 className={scss.subTitle}>{t('main-poster.text')}</h2>\n        </div>\n      </div>\n    </section>\n  );\n};\n\nexport default SectionMainPoster;\n","// extracted by mini-css-extract-plugin\nexport default {\"mySwiper\":\"SlideSwiper_mySwiper__r4cIR\",\"blockDesc\":\"SlideSwiper_blockDesc__yJ8EE\",\"text\":\"SlideSwiper_text__KlDjU\",\"button\":\"SlideSwiper_button__ekn9L\",\"btn\":\"SlideSwiper_btn__7jm3-\"};","import { Swiper, SwiperSlide } from 'swiper/react';\nimport { Pagination, Navigation } from 'swiper/modules';\nimport { useTranslation } from 'react-i18next';\nimport icons from '../../assets/images/icons.svg';\nimport img from '../../assets/images/image 3.webp';\nimport 'swiper/scss';\n\nimport scss from './SlideSwiper.module.scss';\n\nconst array = [1, 2, 3, 4, 5, 6];\n\nconst SlideSwiper = () => {\n  const { t } = useTranslation();\n\n  const textInitial = t('swiper.text');\n\n  const text =\n    textInitial.length > 177 ? textInitial.slice(0, 177) + '...' : textInitial;\n\n  return (\n    <section className={scss['slide-swiper']}>\n      <div className=\"container\">\n        <Swiper\n          slidesPerView={1}\n          spaceBetween={30}\n          loop={true}\n          pagination={{\n            clickable: true,\n            el: '.swiper-pagination',\n          }}\n          navigation={{\n            prevEl: '.swiper-button-prev',\n            nextEl: '.swiper-button-next',\n          }}\n          modules={[Pagination, Navigation]}\n          className={scss.mySwiper}\n        >\n          {array.map(e => (\n            <SwiperSlide key={e}>\n              <div className={scss.content}>\n                <img src={img} alt=\"house\" />\n              </div>\n\n              <div className={scss.blockDesc}>\n                <p className={scss.text}>{text}</p>\n                <button className={scss.button}>\n                  {t('swiper.button')}\n                  <svg width={28} height={14}>\n                    <use href={`${icons}#icon-arrow`}></use>\n                  </svg>\n                </button>\n              </div>\n              <button className={scss.btn}>\n                {t('swiper.button')}\n                <svg className={scss.icon} width={24} height={10}>\n                  <use href={`${icons}#icon-arrow`}></use>\n                </svg>\n              </button>\n            </SwiperSlide>\n          ))}\n\n          <div className=\"swiper-button-prev\">\n            <svg className={scss.icon} width={51} height={101}>\n              <use href={`${icons}#button-swiper-nav`}></use>\n            </svg>\n          </div>\n          <div className=\"swiper-button-next\">\n            <svg className={scss.icon} width={51} height={101}>\n              <use href={`${icons}#button-swiper-nav`}></use>\n            </svg>\n          </div>\n          <div className=\"swiper-pagination\"></div>\n        </Swiper>\n      </div>\n    </section>\n  );\n};\n\nexport default SlideSwiper;\n","import { Form, Formik } from 'formik';\nimport { object, string } from 'yup';\nimport { useTranslation } from 'react-i18next';\nimport Notiflix from 'notiflix';\nimport './FeedbackForm.scss';\nimport FormikControl from '../formik/FormikControl';\n\nNotiflix.Report.init({\n  width: '360px',\n  svgSize: '60px',\n  messageFontSize: '16px',\n  success: {\n    svgColor: '#008000',\n    buttonBackground: '#2e3963',\n    backOverlayColor: '#552db133',\n  },\n});\n\nconst schema = object({\n  name: string().trim().required('Name is a required field'),\n  phone: string()\n    .trim()\n    .matches(/^\\+?3?8?(0\\d{9})$/, 'Invalid phone number')\n    .required('Phone is a required field'),\n});\n\nconst FeedbackForm = () => {\n  const { t } = useTranslation();\n\n  const initialValues = {\n    name: '',\n    phone: '',\n  };\n\n  const handleSubmit = async (values, actions) => {\n    Notiflix.Report.success(\n      `${t('notiflix.title')}, ${values.name}!`,\n      `${t('notiflix.message')} ${values.phone}`,\n      'OK'\n    );\n\n    actions.resetForm();\n  };\n\n  return (\n    <section className=\"feedback-form\">\n      <div className=\"container\">\n        <Formik\n          initialValues={initialValues}\n          validationSchema={schema}\n          onSubmit={handleSubmit}\n        >\n          <Form className=\"form\">\n            <h3 className=\"formTitle\">{t('feedbackForm.title')}</h3>\n            <div className=\"blockInpit\">\n              <FormikControl\n                className=\"input\"\n                control=\"input\"\n                type=\"text\"\n                label={t('feedbackForm.name')}\n                name=\"name\"\n                placeholder={t('feedbackForm.placeholderName')}\n              />\n\n              <FormikControl\n                className=\"input\"\n                control=\"input\"\n                type=\"text\"\n                label={t('feedbackForm.phone')}\n                name=\"phone\"\n                placeholder={t('feedbackForm.placeholderPhone')}\n              />\n            </div>\n            <button className=\"button\" type=\"submit\">\n              {t('feedbackForm.button')}\n            </button>\n          </Form>\n        </Formik>\n      </div>\n    </section>\n  );\n};\n\nexport default FeedbackForm;\n","// extracted by mini-css-extract-plugin\nexport default {\"content\":\"SectionSecondPoster_content__Zdex9\",\"text\":\"SectionSecondPoster_text__uTF5y\"};","import { useTranslation } from 'react-i18next';\nimport image from '../../assets/images/second-poster.jpg';\nimport scss from './SectionSecondPoster.module.scss';\n\nconst SectionSecondPoster = () => {\n  const { t } = useTranslation();\n\n  return (\n    <section className={scss['second-poster']}>\n      <div className=\"container\">\n        <div className={scss.content}>\n          <img src={image} alt=\"man and women\" width={580} />\n          <p className={scss.text}>{t('second-poster.text')}</p>\n        </div>\n      </div>\n    </section>\n  );\n};\n\nexport default SectionSecondPoster;\n","import SectionMainPoster from '../../components/sectionMainPoster';\nimport SlideSwiper from '../../components/slideSwiper';\nimport FeedbackForm from '../../components/feedbackForm';\nimport SectionSecondPoster from '../../components/sectionSecondPoster';\n\nconst PageHome = () => {\n  return (\n    <>\n      <SectionMainPoster />\n      <SlideSwiper />\n      <SectionSecondPoster />\n      <FeedbackForm />\n    </>\n  );\n};\n\nexport default PageHome;\n"],"names":["props","label","name","rest","_jsxs","className","children","_jsx","htmlFor","Field","_ref","form","field","setFieldValue","value","DateView","id","selected","autocomplete","dateFormat","onChange","val","ErrorMessage","component","options","as","control","FormikInput","FormikSelect","FormikDatePicker","SectionMainPoster","t","useTranslation","scss","content","title","subTitle","array","SlideSwiper","textInitial","text","length","slice","Swiper","slidesPerView","spaceBetween","loop","pagination","clickable","el","navigation","prevEl","nextEl","modules","Pagination","Navigation","mySwiper","map","e","SwiperSlide","src","img","alt","blockDesc","button","width","height","href","concat","icons","btn","icon","Notiflix","init","svgSize","messageFontSize","success","svgColor","buttonBackground","backOverlayColor","schema","object","string","trim","required","phone","matches","FeedbackForm","Formik","initialValues","validationSchema","onSubmit","async","values","actions","resetForm","Form","FormikControl","type","placeholder","SectionSecondPoster","image","PageHome","_Fragment"],"sourceRoot":""}