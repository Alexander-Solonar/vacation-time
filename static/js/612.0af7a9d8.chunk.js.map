{"version":3,"file":"static/js/612.0af7a9d8.chunk.js","mappings":"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","sources":["webpack://vacation-time/./src/components/sectionMainPoster/SectionMainPoster.module.scss?fc2f","components/sectionMainPoster/SectionMainPoster.tsx","webpack://vacation-time/./src/components/slideSwiper/SlideSwiper.module.scss?06bb","components/slideSwiper/SlideSwiper.tsx","webpack://vacation-time/./src/components/feedbackForm/FeedbackForm.module.scss?2023","components/feedbackForm/FeedbackForm.tsx","webpack://vacation-time/./src/components/sectionSecondPoster/SectionSecondPoster.module.scss?1c8e","components/sectionSecondPoster/SectionSecondPoster.tsx","pages/home/Home.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"sectionMainPoster\":\"SectionMainPoster_sectionMainPoster__T3NDq\",\"title\":\"SectionMainPoster_title__Y5U2H\",\"subTitle\":\"SectionMainPoster_subTitle__Cxk2R\"};","import { useTranslation } from 'react-i18next';\nimport scss from './SectionMainPoster.module.scss';\n\nconst SectionMainPoster = () => {\n  const { t } = useTranslation();\n\n  return (\n    <div className={scss.sectionMainPoster}>\n      <h1 className={scss.title}>VacationTime</h1>\n      <h2 className={scss.subTitle}>{t('main-poster.text')}</h2>\n    </div>\n  );\n};\n\nexport default SectionMainPoster;\n","// extracted by mini-css-extract-plugin\nexport default {\"mySwiper\":\"SlideSwiper_mySwiper__r4cIR\",\"blockDesc\":\"SlideSwiper_blockDesc__yJ8EE\",\"text\":\"SlideSwiper_text__KlDjU\",\"button\":\"SlideSwiper_button__ekn9L\",\"btn\":\"SlideSwiper_btn__7jm3-\"};","import { Swiper, SwiperSlide } from 'swiper/react';\nimport { Pagination, Navigation } from 'swiper/modules';\nimport { useTranslation } from 'react-i18next';\nimport icons from '../../assets/images/icons.svg';\nimport img from '../../assets/images/image 3.webp';\nimport 'swiper/scss';\n\nimport scss from './SlideSwiper.module.scss';\n\nconst array = [1, 2, 3, 4, 5, 6];\n\nconst SlideSwiper = () => {\n  const { t } = useTranslation();\n\n  const textInitial = t('swiper.text');\n\n  const text =\n    textInitial.length > 177 ? textInitial.slice(0, 177) + '...' : textInitial;\n\n  return (\n    <Swiper\n      slidesPerView={1}\n      spaceBetween={30}\n      loop={true}\n      pagination={{\n        clickable: true,\n        el: '.swiper-pagination',\n      }}\n      navigation={{\n        prevEl: '.swiper-button-prev',\n        nextEl: '.swiper-button-next',\n      }}\n      modules={[Pagination, Navigation]}\n      className={scss.mySwiper}\n    >\n      {array.map(e => (\n        <SwiperSlide key={e}>\n          <div className={scss.content}>\n            <img src={img} alt=\"house\" />\n          </div>\n\n          <div className={scss.blockDesc}>\n            <p className={scss.text}>{text}</p>\n            <button className={scss.button}>\n              {t('swiper.button')}\n              <svg width={28} height={14}>\n                <use href={`${icons}#icon-arrow`}></use>\n              </svg>\n            </button>\n          </div>\n          <button className={scss.btn}>\n            {t('swiper.button')}\n            <svg className={scss.icon} width={24} height={10}>\n              <use href={`${icons}#icon-arrow`}></use>\n            </svg>\n          </button>\n        </SwiperSlide>\n      ))}\n\n      <div className=\"swiper-button-prev\">\n        <svg className={scss.icon} width={51} height={101}>\n          <use href={`${icons}#button-swiper-nav`}></use>\n        </svg>\n      </div>\n      <div className=\"swiper-button-next\">\n        <svg className={scss.icon} width={51} height={101}>\n          <use href={`${icons}#button-swiper-nav`}></use>\n        </svg>\n      </div>\n      <div className=\"swiper-pagination\"></div>\n    </Swiper>\n  );\n};\n\nexport default SlideSwiper;\n","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"FeedbackForm_form__hLbme\",\"formTitle\":\"FeedbackForm_formTitle__3avtP\",\"blockInpit\":\"FeedbackForm_blockInpit__yxB9g\",\"label\":\"FeedbackForm_label__yGhKb\",\"input\":\"FeedbackForm_input__T4m1e\",\"button\":\"FeedbackForm_button__CL8SV\",\"error\":\"FeedbackForm_error__OITfa\"};","import { ErrorMessage, Field, Form, Formik, FormikHelpers } from 'formik';\nimport scss from './FeedbackForm.module.scss';\nimport { FC } from 'react';\nimport { object, string } from 'yup';\nimport { useTranslation } from 'react-i18next';\nimport Notiflix from 'notiflix';\n\nNotiflix.Report.init({\n  width: '360px',\n  svgSize: '60px',\n  messageFontSize: '16px',\n  success: {\n    svgColor: 'var(--primary-green-color)',\n    buttonBackground: 'var(--secondary-color)',\n    backOverlayColor: 'var(--fourth-color)',\n  },\n});\n\nexport interface FormFeedbackValues {\n  name: string;\n  phone: string;\n}\n\ninterface FormErrorProps {\n  name: string;\n}\n\nconst schema = object({\n  name: string().trim().required('Name is a required field'),\n  phone: string()\n    .trim()\n    .matches(/^\\+?3?8?(0\\d{9})$/, 'Invalid phone number')\n    .required('Phone is a required field'),\n});\n\nconst FormError: FC<FormErrorProps> = ({ name }) => {\n  return (\n    <ErrorMessage\n      name={name}\n      render={message => <p className={scss.error}>{message}</p>}\n    />\n  );\n};\n\nconst FeedbackForm = () => {\n  const { t } = useTranslation();\n\n  const initialValues = {\n    name: '',\n    phone: '',\n  };\n\n  const handleSubmit = async (\n    values: FormFeedbackValues,\n    actions: FormikHelpers<FormFeedbackValues>\n  ) => {\n    Notiflix.Report.success(\n      `${t('notiflix.title')}, ${values.name}!`,\n      `${t('notiflix.message')} ${values.phone}`,\n      'OK'\n    );\n\n    actions.resetForm();\n  };\n\n  return (\n    <Formik\n      initialValues={initialValues}\n      validationSchema={schema}\n      onSubmit={handleSubmit}\n    >\n      <Form className={scss.form}>\n        <h3 className={scss.formTitle}>{t('feedbackForm.title')}</h3>\n        <div className={scss.blockInpit}>\n          <label className={scss.label}>\n            {t('feedbackForm.name')}\n            <Field\n              className={scss.input}\n              type=\"text\"\n              name=\"name\"\n              placeholder={t('feedbackForm.placeholderName')}\n            />\n            <FormError name=\"name\" />\n          </label>\n          <label className={scss.label}>\n            {t('feedbackForm.phone')}\n            <Field\n              className={scss.input}\n              type=\"phone\"\n              name=\"phone\"\n              placeholder={t('feedbackForm.placeholderPhone')}\n            />\n            <FormError name=\"phone\" />\n          </label>\n        </div>\n        <button className={scss.button} type=\"submit\">\n          {t('feedbackForm.button')}\n        </button>\n      </Form>\n    </Formik>\n  );\n};\n\nexport default FeedbackForm;\n","// extracted by mini-css-extract-plugin\nexport default {\"sectionSecondPoster\":\"SectionSecondPoster_sectionSecondPoster__ZKkYN\",\"text\":\"SectionSecondPoster_text__uTF5y\"};","import { useTranslation } from 'react-i18next';\nimport image from '../../assets/images/second-poster.jpg';\nimport scss from './SectionSecondPoster.module.scss';\n\nconst SectionSecondPoster = () => {\n  const { t } = useTranslation();\n\n  return (\n    <div className={scss.sectionSecondPoster}>\n      <img src={image} alt=\"man and women\" width={580} />\n      <p className={scss.text}>{t('second-poster.text')}</p>\n    </div>\n  );\n};\n\nexport default SectionSecondPoster;\n","import SectionMainPoster from '../../components/sectionMainPoster';\nimport SlideSwiper from '../../components/slideSwiper';\nimport FeedbackForm from '../../components/feedbackForm';\nimport SectionSecondPoster from '../../components/sectionSecondPoster';\n\nconst Home = () => {\n  return (\n    <>\n      <SectionMainPoster />\n      <SlideSwiper />\n      <SectionSecondPoster />\n      <FeedbackForm />\n    </>\n  );\n};\n\nexport default Home;\n"],"names":["SectionMainPoster","t","useTranslation","_jsxs","className","scss","children","_jsx","array","SlideSwiper","textInitial","text","length","slice","Swiper","slidesPerView","spaceBetween","loop","pagination","clickable","el","navigation","prevEl","nextEl","modules","Pagination","Navigation","mySwiper","map","e","SwiperSlide","content","src","img","alt","blockDesc","button","width","height","href","concat","icons","btn","icon","Notiflix","init","svgSize","messageFontSize","success","svgColor","buttonBackground","backOverlayColor","schema","object","name","string","trim","required","phone","matches","FormError","_ref","ErrorMessage","render","message","FeedbackForm","Formik","initialValues","validationSchema","onSubmit","async","values","actions","resetForm","Form","Field","type","placeholder","SectionSecondPoster","image","Home","_Fragment"],"sourceRoot":""}