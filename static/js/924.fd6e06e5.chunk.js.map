{"version":3,"file":"static/js/924.fd6e06e5.chunk.js","mappings":"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","sources":["webpack://vacation-time/./src/components/formik/Formik.module.scss?9562","components/formik/FormikDatePicker.js","components/formik/FormikInput.js","components/formik/FormikSelect.js","components/formik/FormikControl.js","webpack://vacation-time/./src/components/sectionMainPoster/SectionMainPoster.module.scss?fc2f","components/sectionMainPoster/SectionMainPoster.js","webpack://vacation-time/./src/components/slideSwiper/SlideSwiper.module.scss?06bb","components/slideSwiper/SlideSwiper.js","webpack://vacation-time/./src/components/feedbackForm/FeedbackForm.module.scss?2023","components/feedbackForm/FeedbackForm.js","webpack://vacation-time/./src/components/sectionSecondPoster/SectionSecondPoster.module.scss?1c8e","components/sectionSecondPoster/SectionSecondPoster.js","pages/pageHome/PageHome.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"control\":\"Formik_control__F96Aj\",\"label\":\"Formik_label__PQ4oW\",\"error\":\"Formik_error__VykRM\"};","import { ErrorMessage, Field } from 'formik';\nimport DateView from 'react-datepicker';\nimport styles from './Formik.module.scss';\n\nconst FormikDatePicker = props => {\n  const { label, name, ...rest } = props;\n\n  return (\n    <div className={styles.control}>\n      <label className={styles.label} htmlFor={name}>\n        {label}\n      </label>\n      <Field name={name}>\n        {({ form, field }) => {\n          const { setFieldValue } = form;\n          const { value } = field;\n\n          return (\n            <DateView\n              id={name}\n              {...field}\n              {...rest}\n              selected={value}\n              autocomplete=\"off\"\n              dateFormat=\"dd.MM.yyyy\"\n              onChange={val => setFieldValue(name, val)}\n            />\n          );\n        }}\n      </Field>\n      <ErrorMessage name={name} component=\"p\" className={styles.error} />\n    </div>\n  );\n};\n\nexport default FormikDatePicker;\n","import { ErrorMessage, Field } from 'formik';\nimport styles from './Formik.module.scss';\n\nconst FormikInput = props => {\n  const { label, name, ...rest } = props;\n  return (\n    <div className={styles.control}>\n      <label className={styles.label} htmlFor={name}>\n        {label}\n      </label>\n      <Field id={name} name={name} {...rest} />\n      <ErrorMessage name={name} component=\"p\" className={styles.error} />\n    </div>\n  );\n};\n\nexport default FormikInput;\n","import { ErrorMessage, Field } from 'formik';\nimport styles from './Formik.module.scss';\n\nconst FormikSelect = props => {\n  const { label, name, options, ...rest } = props;\n\n  return (\n    <div className={styles.control}>\n      <label className={styles.label} htmlFor={name}>\n        {label}\n      </label>\n      <Field as=\"select\" id={name} name={name} {...rest}>\n        <option value=\"not selected\">Not selected</option>\n        <option value=\"male\">Male</option>\n        <option value=\"female\">Female</option>\n      </Field>\n      <ErrorMessage name={name} component=\"p\" className={styles.error} />\n    </div>\n  );\n};\n\nexport default FormikSelect;\n","import FormikDatePicker from './FormikDatePicker';\nimport FormikInput from './FormikInput';\nimport FormikSelect from './FormikSelect';\n\nconst FormikControl = props => {\n  const { control, ...rest } = props;\n\n  switch (control) {\n    case 'input':\n      return <FormikInput {...rest} />;\n    case 'select':\n      return <FormikSelect {...rest} />;\n    case 'date':\n      return <FormikDatePicker {...rest} />;\n    default:\n      return null;\n  }\n};\n\nexport default FormikControl;\n","// extracted by mini-css-extract-plugin\nexport default {\"content\":\"SectionMainPoster_content__RY2dv\",\"title\":\"SectionMainPoster_title__Y5U2H\",\"subTitle\":\"SectionMainPoster_subTitle__Cxk2R\"};","import { useTranslation } from 'react-i18next';\nimport styles from './SectionMainPoster.module.scss';\n\nconst SectionMainPoster = () => {\n  const { t } = useTranslation();\n\n  return (\n    <section>\n      <div className=\"container\">\n        <div className={styles.content}>\n          <h1 className={styles.title}>VacationTime</h1>\n          <h2 className={styles.subTitle}>{t('main-poster.text')}</h2>\n        </div>\n      </div>\n    </section>\n  );\n};\n\nexport default SectionMainPoster;\n","// extracted by mini-css-extract-plugin\nexport default {\"mySwiper\":\"SlideSwiper_mySwiper__r4cIR\",\"blockDesc\":\"SlideSwiper_blockDesc__yJ8EE\",\"text\":\"SlideSwiper_text__KlDjU\",\"button\":\"SlideSwiper_button__ekn9L\",\"swiperButtonPrev\":\"SlideSwiper_swiperButtonPrev__zuHgK\",\"swiperButtonNext\":\"SlideSwiper_swiperButtonNext__HaX7O\",\"swiper-pagination\":\"SlideSwiper_swiper-pagination__-GoEp\",\"swiperPaginationBullet\":\"SlideSwiper_swiperPaginationBullet__r9psH\",\"swiperPaginationBulletActive\":\"SlideSwiper_swiperPaginationBulletActive__vUhmb\"};","import { Swiper, SwiperSlide } from 'swiper/react';\nimport { Pagination, Navigation } from 'swiper/modules';\nimport { useTranslation } from 'react-i18next';\nimport icons from '../../assets/images/icons.svg';\nimport img from '../../assets/images/image 3.webp';\nimport 'swiper/scss';\n\nimport styles from './SlideSwiper.module.scss';\n\nconst array = [1, 2, 3, 4, 5, 6];\n\nconst SlideSwiper = () => {\n  const { t } = useTranslation();\n\n  const textInitial = t('swiper.text');\n\n  const text =\n    textInitial.length > 177 ? textInitial.slice(0, 177) + '...' : textInitial;\n\n  return (\n    <section>\n      <div className=\"container\">\n        <Swiper\n          slidesPerView={1}\n          spaceBetween={30}\n          loop={true}\n          pagination={{\n            clickable: true,\n            el: `.${styles['swiper-pagination']}`,\n            bulletClass: `${styles.swiperPaginationBullet}`,\n            bulletActiveClass: `${styles.swiperPaginationBulletActive}`,\n          }}\n          navigation={{\n            prevEl: `.${styles.swiperButtonPrev}`,\n            nextEl: `.${styles.swiperButtonNext}`,\n          }}\n          modules={[Pagination, Navigation]}\n          className={styles.mySwiper}\n        >\n          {array.map(e => (\n            <SwiperSlide key={e}>\n              <div className={styles.content}>\n                <img src={img} alt=\"house\" />\n              </div>\n\n              <div className={styles.blockDesc}>\n                <p className={styles.text}>{text}</p>\n                <button className={styles.button}>\n                  {t('swiper.button')}\n                  <svg width={28} height={14}>\n                    <use href={`${icons}#icon-arrow`}></use>\n                  </svg>\n                </button>\n              </div>\n            </SwiperSlide>\n          ))}\n\n          <div className={styles.swiperButtonPrev}>\n            <svg className={styles.icon} width={51} height={101}>\n              <use href={`${icons}#button-swiper-nav`}></use>\n            </svg>\n          </div>\n          <div className={styles.swiperButtonNext}>\n            <svg className={styles.icon} width={51} height={101}>\n              <use href={`${icons}#button-swiper-nav`}></use>\n            </svg>\n          </div>\n          <div className={styles['swiper-pagination']}></div>\n        </Swiper>\n      </div>\n    </section>\n  );\n};\n\nexport default SlideSwiper;\n","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"FeedbackForm_form__hLbme\",\"title\":\"FeedbackForm_title__MG4s6\",\"blockInput\":\"FeedbackForm_blockInput__1ZttH\",\"input\":\"FeedbackForm_input__T4m1e\",\"button\":\"FeedbackForm_button__CL8SV\"};","import { Form, Formik } from 'formik';\nimport { object, string } from 'yup';\nimport { useTranslation } from 'react-i18next';\nimport Notiflix from 'notiflix';\nimport FormikControl from '../formik/FormikControl';\nimport styles from './FeedbackForm.module.scss';\n\nNotiflix.Report.init({\n  width: '360px',\n  svgSize: '60px',\n  messageFontSize: '16px',\n  success: {\n    svgColor: '#008000',\n    buttonBackground: '#2e3963',\n    backOverlayColor: '#552db133',\n  },\n});\n\nconst schema = object({\n  name: string().trim().required('Name is a required field'),\n  phone: string()\n    .trim()\n    .matches(/^\\+?3?8?(0\\d{9})$/, 'Invalid phone number')\n    .required('Phone is a required field'),\n});\n\nconst FeedbackForm = () => {\n  const { t } = useTranslation();\n\n  const initialValues = {\n    name: '',\n    phone: '',\n  };\n\n  const handleSubmit = async (values, actions) => {\n    Notiflix.Report.success(\n      `${t('notiflix.title')}, ${values.name}!`,\n      `${t('notiflix.message')} ${values.phone}`,\n      'OK'\n    );\n\n    actions.resetForm();\n  };\n\n  return (\n    <section>\n      <div className=\"container\">\n        <Formik\n          initialValues={initialValues}\n          validationSchema={schema}\n          onSubmit={handleSubmit}\n        >\n          <Form className={styles.form}>\n            <h3 className={styles.title}>{t('feedbackForm.title')}</h3>\n            <div className={styles.blockInput}>\n              <FormikControl\n                className={styles.input}\n                control=\"input\"\n                type=\"text\"\n                label={t('feedbackForm.name')}\n                name=\"name\"\n                placeholder={t('feedbackForm.placeholderName')}\n              />\n\n              <FormikControl\n                className={styles.input}\n                control=\"input\"\n                type=\"text\"\n                label={t('feedbackForm.phone')}\n                name=\"phone\"\n                placeholder={t('feedbackForm.placeholderPhone')}\n              />\n            </div>\n            <button className={styles.button} type=\"submit\">\n              {t('feedbackForm.button')}\n            </button>\n          </Form>\n        </Formik>\n      </div>\n    </section>\n  );\n};\n\nexport default FeedbackForm;\n","// extracted by mini-css-extract-plugin\nexport default {\"content\":\"SectionSecondPoster_content__Zdex9\",\"text\":\"SectionSecondPoster_text__uTF5y\"};","import { useTranslation } from 'react-i18next';\nimport image from '../../assets/images/second-poster.jpg';\nimport styles from './SectionSecondPoster.module.scss';\n\nconst SectionSecondPoster = () => {\n  const { t } = useTranslation();\n\n  return (\n    <section>\n      <div className=\"container\">\n        <div className={styles.content}>\n          <img src={image} alt=\"man and women\" width={580} />\n          <p className={styles.text}>{t('second-poster.text')}</p>\n        </div>\n      </div>\n    </section>\n  );\n};\n\nexport default SectionSecondPoster;\n","import SectionMainPoster from '../../components/sectionMainPoster';\nimport SlideSwiper from '../../components/slideSwiper';\nimport FeedbackForm from '../../components/feedbackForm';\nimport SectionSecondPoster from '../../components/sectionSecondPoster';\n\nconst PageHome = () => {\n  return (\n    <>\n      <SectionMainPoster />\n      <SlideSwiper />\n      <SectionSecondPoster />\n      <FeedbackForm />\n    </>\n  );\n};\n\nexport default PageHome;\n"],"names":["props","label","name","rest","_jsxs","className","styles","children","_jsx","htmlFor","Field","_ref","form","field","setFieldValue","value","DateView","id","selected","autocomplete","dateFormat","onChange","val","ErrorMessage","component","options","as","control","FormikInput","FormikSelect","FormikDatePicker","SectionMainPoster","t","useTranslation","array","SlideSwiper","textInitial","text","length","slice","Swiper","slidesPerView","spaceBetween","loop","pagination","clickable","el","concat","bulletClass","swiperPaginationBullet","bulletActiveClass","swiperPaginationBulletActive","navigation","prevEl","swiperButtonPrev","nextEl","swiperButtonNext","modules","Pagination","Navigation","mySwiper","map","e","SwiperSlide","content","src","img","alt","blockDesc","button","width","height","href","icons","icon","Notiflix","init","svgSize","messageFontSize","success","svgColor","buttonBackground","backOverlayColor","schema","object","string","trim","required","phone","matches","FeedbackForm","Formik","initialValues","validationSchema","onSubmit","async","values","actions","resetForm","Form","FormikControl","type","placeholder","SectionSecondPoster","image","PageHome","_Fragment"],"sourceRoot":""}