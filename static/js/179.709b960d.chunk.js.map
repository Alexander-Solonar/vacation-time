{"version":3,"file":"static/js/179.709b960d.chunk.js","mappings":"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","sources":["webpack://vacation-time/./src/components/common/mainTitle/MainTitle.module.scss?e6c7","components/common/mainTitle/MainTitle.jsx","webpack://vacation-time/./src/components/formik/Formik.module.scss?9562","components/formik/FormikDatePicker.jsx","components/formik/FormikInput.jsx","components/formik/FormikMaskedInput.jsx","components/formik/FormikSelect.jsx","components/formik/FormikControl.jsx","components/formik/schemas.js","webpack://vacation-time/./src/components/userCard/UserCard.module.scss?fc75","webpack://vacation-time/./src/components/avatarUploader/AvatarUploader.module.scss?321a","components/avatarUploader/AvatarUploader.jsx","webpack://vacation-time/./src/components/forms/editProfileForm/EditProfileForm.module.scss?7a49","components/forms/editProfileForm/EditProfileForm.jsx","components/userCard/UserCard.jsx","pages/pageAccount/PageAccount.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"titleContainer\":\"MainTitle_titleContainer__lBkLs\",\"title\":\"MainTitle_title__58GzQ\"};","import styles from './MainTitle.module.scss';\n\nconst MainTitle = ({ name }) => {\n  return (\n    <div className={styles.titleContainer}>\n      <h1 className={styles.title}>{name}</h1>\n    </div>\n  );\n};\n\nexport default MainTitle;\n","// extracted by mini-css-extract-plugin\nexport default {\"control\":\"Formik_control__F96Aj\",\"label\":\"Formik_label__PQ4oW\",\"icon\":\"Formik_icon__O+hiU\",\"error\":\"Formik_error__VykRM\"};","import { ErrorMessage, Field } from 'formik';\nimport DateView from 'react-datepicker';\nimport styles from './Formik.module.scss';\n\nconst FormikDatePicker = props => {\n  const { label, name, ...rest } = props;\n\n  return (\n    <div className={styles.control}>\n      <label className={styles.label} htmlFor={name}>\n        {label}\n      </label>\n      <Field name={name} autocomplete=\"off\">\n        {({ form, field }) => {\n          const { setFieldValue } = form;\n          const { value } = field;\n\n          return (\n            <DateView\n              id={name}\n              {...field}\n              {...rest}\n              showIcon\n              calendarIconClassname={styles.icon}\n              toggleCalendarOnIconClick\n              selected={value}\n              placeholderText=\"dd.MM.yyyy\"\n              dateFormat=\"dd.MM.yyyy\"\n              autocomplete=\"off\"\n              onChange={val => setFieldValue(name, val)}\n            />\n          );\n        }}\n      </Field>\n      <ErrorMessage name={name} component=\"p\" className={styles.error} />\n    </div>\n  );\n};\n\nexport default FormikDatePicker;\n","import { ErrorMessage, Field } from 'formik';\nimport styles from './Formik.module.scss';\n\nconst FormikInput = props => {\n  const { label, name, ...rest } = props;\n  return (\n    <div className={styles.control}>\n      <label className={styles.label} htmlFor={name}>\n        {label}\n      </label>\n      <Field id={name} name={name} {...rest} />\n      <ErrorMessage name={name} component=\"p\" className={styles.error} />\n    </div>\n  );\n};\n\nexport default FormikInput;\n","import { ErrorMessage, Field } from 'formik';\nimport { InputMask } from 'primereact/inputmask';\nimport styles from './Formik.module.scss';\n\nconst FormikMaskedInput = props => {\n  const { label, name, ...rest } = props;\n\n  return (\n    <div className={styles.control}>\n      <label className={styles.label} htmlFor={name}>\n        {label}\n      </label>\n      <Field name={name}>\n        {({ field }) => {\n          return (\n            <InputMask\n              {...field}\n              {...rest}\n              id={name}\n              mask=\"+38(099) 999-9999\"\n              placeholder=\"+38(099) 999-9999\"\n            ></InputMask>\n          );\n        }}\n      </Field>\n      <ErrorMessage name={name} component=\"p\" className={styles.error} />\n    </div>\n  );\n};\n\nexport default FormikMaskedInput;\n","import { ErrorMessage, Field } from 'formik';\nimport Select from 'react-select';\nimport styles from './Formik.module.scss';\n\nconst customStyles = {\n  control: provided => ({\n    ...provided,\n    flex: '1',\n    height: '100%',\n    marginLeft: '-11px',\n    cursor: 'pointer',\n    border: 'none',\n    backgroundColor: '#fff',\n    boxShadow: 'none',\n  }),\n  option: provided => ({\n    ...provided,\n    cursor: 'pointer',\n    color: 'inherit',\n    borderBottom: '1px solid #ddd',\n    backgroundColor: 'inherit',\n\n    '&:last-child': {\n      borderBottom: 'none',\n    },\n\n    '&:hover': {\n      backgroundColor: '#444765',\n      color: '#fff',\n    },\n  }),\n  menu: provided => ({\n    ...provided,\n    left: '0',\n  }),\n};\n\nconst FormikSelect = props => {\n  const { label, name, options, ...rest } = props;\n\n  return (\n    <div className={styles.control}>\n      <label className={styles.label} htmlFor={name}>\n        {label}\n      </label>\n      <Field name={name}>\n        {({ field, form }) => (\n          <Select\n            inputId={name}\n            {...rest}\n            {...field}\n            options={options}\n            styles={customStyles}\n            name={name}\n            value={options.find(option => option.value === field.value)}\n            onChange={option => form.setFieldValue(name, option.value)}\n            onBlur={field.onBlur}\n          />\n        )}\n      </Field>\n\n      <ErrorMessage name={name} component=\"p\" className={styles.error} />\n    </div>\n  );\n};\n\nexport default FormikSelect;\n","import FormikDatePicker from './FormikDatePicker';\nimport FormikInput from './FormikInput';\nimport FormikMaskedInput from './FormikMaskedInput';\nimport FormikSelect from './FormikSelect';\n\nconst FormikControl = props => {\n  const { control, ...rest } = props;\n\n  switch (control) {\n    case 'input':\n      return <FormikInput {...rest} />;\n    case 'select':\n      return <FormikSelect {...rest} />;\n    case 'date':\n      return <FormikDatePicker {...rest} />;\n    case 'phone':\n      return <FormikMaskedInput {...rest} />;\n    default:\n      return null;\n  }\n};\n\nexport default FormikControl;\n","import { date, object, string } from 'yup';\n\nexport const registerSchema = object({\n  name: string().trim().required('Name is a required field'),\n  email: string().trim().required('Email is a required field'),\n  password: string().trim().required('Password is a required field'),\n});\n\nexport const LoginSchema = object({\n  email: string().trim().required('Email is a required field'),\n  password: string().trim().required('Password is a required field'),\n});\n\nexport const EditSchema = object({\n  name: string().trim().required('This is a required field'),\n  gender: string().trim(),\n  age: date(),\n  phone: string(),\n  email: string().trim().required('This is a required field'),\n});\n\nexport const feedbackSchema = object({\n  name: string().trim().required('Name is a required field'),\n  phone: string()\n    .trim()\n    .matches(/^\\+?3?8?(0\\d{9})$/, 'Invalid phone number')\n    .required('Phone is a required field'),\n});\n","// extracted by mini-css-extract-plugin\nexport default {\"content\":\"UserCard_content__cl+Jg\",\"infoContainer\":\"UserCard_infoContainer__sMKUh\",\"avatarImageContainer\":\"UserCard_avatarImageContainer__9S2IY\",\"avatarImage\":\"UserCard_avatarImage__lcWHl\",\"buttonsContainer\":\"UserCard_buttonsContainer__-Iyc+\",\"list\":\"UserCard_list__9+aHj\",\"item\":\"UserCard_item__bbLgv\",\"label\":\"UserCard_label__EX734\",\"value\":\"UserCard_value__Iok54\",\"changeAvatarButton\":\"UserCard_changeAvatarButton__7yfpy\",\"settingButton\":\"UserCard_settingButton__Km2UW\",\"logoutButton\":\"UserCard_logoutButton__T809m\"};","// extracted by mini-css-extract-plugin\nexport default {\"modalOverlay\":\"AvatarUploader_modalOverlay__m1UUD\",\"modal\":\"AvatarUploader_modal__-G-xy\",\"closeButton\":\"AvatarUploader_closeButton__+Fw0V\",\"form\":\"AvatarUploader_form__cw4iy\",\"previewContainer\":\"AvatarUploader_previewContainer__v2s8+\",\"previewImage\":\"AvatarUploader_previewImage__SOw5Q\",\"inputLabel\":\"AvatarUploader_inputLabel__tBE1P\",\"submitButton\":\"AvatarUploader_submitButton__MtJxg\"};","import React, { useState } from 'react';\nimport styles from './AvatarUploader.module.scss';\nimport icons from '../../assets/images/icons.svg';\nimport userAvatar from '../../assets/images/user-avatar.png';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { changeAvatar, removeAvatar } from '../../redux/operations';\n\nconst AvatarUploader = ({ onClose }) => {\n  const [avatar, setAvatar] = useState(null);\n  const [preview, setPreview] = useState(null);\n  const dispatch = useDispatch();\n  const { uid } = useSelector(state => state.auth);\n  const { avatarURL } = useSelector(state => state.data.user);\n\n  const handleFileChange = event => {\n    const file = event.target.files[0];\n\n    if (file) {\n      setAvatar(file);\n      const reader = new FileReader();\n      reader.onloadend = () => {\n        setPreview(reader.result);\n      };\n      reader.readAsDataURL(file);\n    }\n  };\n\n  const handleRemovePhoto = () => {\n    setAvatar(null);\n    setPreview(null);\n    if (avatarURL) {\n      dispatch(removeAvatar({ uid }));\n    }\n  };\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n    dispatch(changeAvatar({ avatar, uid, preview }));\n  };\n\n  return (\n    <div className={styles.modalOverlay}>\n      <div className={styles.modal}>\n        <button className={styles.closeButton} onClick={() => onClose(false)}>\n          <svg width=\"32\" height=\"32\">\n            <use href={`${icons}#icon-close-menu`}></use>\n          </svg>\n        </button>\n        <form onSubmit={handleSubmit} className={styles.form}>\n          <div className={styles.previewContainer}>\n            <img\n              src={preview ? preview : avatarURL ? avatarURL : userAvatar}\n              alt=\"Avatar Preview\"\n              className={styles.previewImage}\n            />\n          </div>\n\n          {(avatarURL || preview) && (\n            <button\n              type=\"button\"\n              className={styles.inputLabel}\n              onClick={handleRemovePhoto}\n            >\n              Удалить фото\n            </button>\n          )}\n\n          <label htmlFor=\"fileInput\" className={styles.inputLabel}>\n            Выбрать файл\n          </label>\n          <input\n            id=\"fileInput\"\n            type=\"file\"\n            accept=\"image/*\"\n            onChange={handleFileChange}\n          />\n          <button\n            type=\"submit\"\n            className={styles.submitButton}\n            disabled={!avatar}\n          >\n            Загрузить аватар\n          </button>\n        </form>\n      </div>\n    </div>\n  );\n};\n\nexport default AvatarUploader;\n","// extracted by mini-css-extract-plugin\nexport default {\"modalOverlay\":\"EditProfileForm_modalOverlay__Jc-Hi\",\"wrapper\":\"EditProfileForm_wrapper__hare3\",\"closeButton\":\"EditProfileForm_closeButton__DnNA8\",\"form\":\"EditProfileForm_form__lCnXC\",\"input\":\"EditProfileForm_input__SjSl-\",\"submitButton\":\"EditProfileForm_submitButton__0KlMp\"};","import { useDispatch, useSelector } from 'react-redux';\nimport { format, parse } from 'date-fns';\nimport { Formik, Form } from 'formik';\nimport { EditSchema } from 'components/formik/schemas';\nimport { editProfile } from '../../../redux/operations';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport FormikControl from '../../formik/FormikControl';\nimport icons from '../../../assets/images/icons.svg';\nimport styles from './EditProfileForm.module.scss';\n\nconst vary = [\n  { value: 'male', label: 'Male' },\n  { value: 'female', label: 'Female' },\n];\n\nconst EditProfileForm = ({ onClose }) => {\n  const { uid } = useSelector(state => state.auth);\n  const { user } = useSelector(state => state.data);\n  const dispatch = useDispatch();\n\n  const initialValues = {\n    ...user,\n    age: user?.age ? parse(user.age, 'dd.MM.yyyy', new Date()) : '',\n    gender: '',\n    phone: '',\n  };\n\n  const handleSubmit = values => {\n    const dateString = format(values.age, 'dd.MM.yyyy');\n    dispatch(\n      editProfile({\n        uid,\n        values: { ...values, age: dateString },\n      })\n    );\n  };\n\n  return (\n    <div className={styles.modalOverlay}>\n      <div className={styles.wrapper}>\n        <button className={styles.closeButton} onClick={() => onClose(false)}>\n          <svg width=\"32\" height=\"32\">\n            <use href={`${icons}#icon-close-menu`}></use>\n          </svg>\n        </button>\n        <Formik\n          initialValues={initialValues}\n          validationSchema={EditSchema}\n          onSubmit={handleSubmit}\n        >\n          {() => (\n            <Form className={styles.form}>\n              <FormikControl\n                className={styles.input}\n                control=\"input\"\n                type=\"text\"\n                label=\"Name\"\n                name=\"name\"\n              />\n              <FormikControl\n                className={styles.input}\n                control=\"select\"\n                label=\"Gender\"\n                name=\"gender\"\n                options={vary}\n              />\n\n              <FormikControl\n                className={styles.input}\n                control=\"date\"\n                label=\"DOB\"\n                name=\"dob\"\n              />\n\n              <FormikControl\n                className={styles.input}\n                control=\"phone\"\n                type=\"text\"\n                label=\"Phone\"\n                name=\"phone\"\n              />\n              <FormikControl\n                className={styles.input}\n                control=\"input\"\n                type=\"email\"\n                label=\"Email\"\n                name=\"email\"\n              />\n              <button className={styles.submitButton} type=\"submit\">\n                Submit\n              </button>\n            </Form>\n          )}\n        </Formik>\n      </div>\n    </div>\n  );\n};\n\nexport default EditProfileForm;\n","import { useTranslation } from 'react-i18next';\nimport userAvatar from '../../assets/images/user-avatar.png';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { logOut } from '../../redux/auth/operations';\n\nimport { useState } from 'react';\nimport styles from './UserCard.module.scss';\nimport AvatarUploader from 'components/avatarUploader';\nimport EditProfileForm from 'components/forms/editProfileForm/EditProfileForm';\n\nconst UserCard = () => {\n  const [showEditForm, setShownEditForm] = useState(false);\n  const [showAvatarUploader, setShowAvatarUploader] = useState(false);\n  const { name, gender, age, phone, email, avatarURL } = useSelector(\n    state => state.data.user || ''\n  );\n\n  const { t } = useTranslation();\n  const dispatch = useDispatch();\n\n  const handleClick = () => {\n    dispatch(logOut());\n  };\n\n  const userInfo = [\n    { value: name },\n    { label: t('account.sex'), value: gender },\n    { label: t('account.date-birth'), value: age },\n    { label: t('account.phone'), value: phone },\n    { label: t('account.email'), value: email },\n  ];\n\n  return (\n    <div className={styles.content}>\n      <div className={styles.infoContainer}>\n        <div>\n          <div className={styles.avatarImageContainer}>\n            <img\n              className={styles.avatarImage}\n              src={avatarURL ? avatarURL : userAvatar}\n              alt=\"default-user-avatar\"\n            />\n          </div>\n          <div className={styles.buttonsContainer}>\n            <button\n              className={styles.changeAvatarButton}\n              onClick={() => setShowAvatarUploader(true)}\n            >\n              {t('account.change-avatar-btn')}\n            </button>\n            <button\n              className={styles.settingButton}\n              onClick={() => setShownEditForm(true)}\n            >\n              {t('account.settings-btn')}\n            </button>\n          </div>\n        </div>\n        <ul className={styles.list}>\n          {userInfo.map(({ label, value }, index) => (\n            <li className={styles.item} key={index}>\n              <p>\n                {label && <span className={styles.label}>{label}:</span>}\n                <span className={styles.value}> {value}</span>\n              </p>\n            </li>\n          ))}\n        </ul>\n      </div>\n      <button className={styles.logoutButton} onClick={handleClick}>\n        {t('account.exit-btn')}\n      </button>\n      {showEditForm && <EditProfileForm onClose={setShownEditForm} />}\n      {showAvatarUploader && <AvatarUploader onClose={setShowAvatarUploader} />}\n    </div>\n  );\n};\n\nexport default UserCard;\n","import { useSelector } from 'react-redux';\nimport { useTranslation } from 'react-i18next';\nimport MainTitle from 'components/common/mainTitle';\nimport Loader from 'components/common/loader';\nimport UserCard from 'components/userCard';\n\nconst PageAccount = () => {\n  const { t } = useTranslation();\n  const { isLoader } = useSelector(state => state.data);\n\n  return (\n    <div>\n      <MainTitle name={t('account.title')} />\n      <div className=\"container\">{!isLoader ? <Loader /> : <UserCard />}</div>\n    </div>\n  );\n};\n\nexport default PageAccount;\n"],"names":["_ref","name","_jsx","className","styles","children","props","label","rest","_jsxs","htmlFor","Field","autocomplete","form","field","setFieldValue","value","DateView","id","showIcon","calendarIconClassname","toggleCalendarOnIconClick","selected","placeholderText","dateFormat","onChange","val","ErrorMessage","component","InputMask","mask","placeholder","customStyles","control","provided","flex","height","marginLeft","cursor","border","backgroundColor","boxShadow","option","color","borderBottom","menu","left","options","Select","inputId","find","onBlur","FormikInput","FormikSelect","FormikDatePicker","FormikMaskedInput","registerSchema","object","string","trim","required","email","password","LoginSchema","EditSchema","gender","age","date","phone","feedbackSchema","matches","onClose","avatar","setAvatar","useState","preview","setPreview","dispatch","useDispatch","uid","useSelector","state","auth","avatarURL","data","user","onClick","width","href","concat","icons","onSubmit","async","event","preventDefault","changeAvatar","src","userAvatar","alt","type","handleRemovePhoto","removeAvatar","accept","file","target","files","reader","FileReader","onloadend","result","readAsDataURL","disabled","vary","initialValues","parse","Date","Formik","validationSchema","values","dateString","format","editProfile","Form","FormikControl","UserCard","showEditForm","setShownEditForm","showAvatarUploader","setShowAvatarUploader","t","useTranslation","userInfo","map","index","handleClick","logOut","EditProfileForm","AvatarUploader","PageAccount","isLoader","MainTitle","Loader"],"sourceRoot":""}