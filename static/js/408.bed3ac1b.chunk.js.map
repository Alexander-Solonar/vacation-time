{"version":3,"file":"static/js/408.bed3ac1b.chunk.js","mappings":"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","sources":["components/formik/FormikDatePicker.js","components/formik/FormikInput.js","components/formik/FormikSelect.js","components/formik/FormikControl.js","webpack://vacation-time/./src/components/pageTitle/PageTitle.module.scss?4509","components/pageTitle/PageTitle.js","components/editProfileForm/EditProfileForm.js","components/userCard/UserCard.js","components/loginForm/LoginForm.js","components/registerForm/RegisterForm.js","components/backdrop/Backdrop.js","components/loader/Loader.js","pages/pageAccount/PageAccount.js"],"sourcesContent":["import { ErrorMessage, Field } from 'formik';\nimport DateView from 'react-datepicker';\n\nconst FormikDatePicker = props => {\n  const { label, name, ...rest } = props;\n\n  return (\n    <div className=\"form-control\">\n      <label className=\"form-label\" htmlFor={name}>\n        {label}\n      </label>\n      <Field name={name}>\n        {({ form, field }) => {\n          const { setFieldValue } = form;\n          const { value } = field;\n\n          return (\n            <DateView\n              id={name}\n              {...field}\n              {...rest}\n              selected={value}\n              autocomplete=\"off\"\n              dateFormat=\"dd.MM.yyyy\"\n              onChange={val => setFieldValue(name, val)}\n            />\n          );\n        }}\n      </Field>\n      <ErrorMessage name={name} component=\"p\" className=\"error\" />\n    </div>\n  );\n};\n\nexport default FormikDatePicker;\n","import { ErrorMessage, Field } from 'formik';\nimport './Formik.scss';\n\nconst FormikInput = props => {\n  const { label, name, ...rest } = props;\n  return (\n    <div className=\"form-control\">\n      <label className=\"form-label\" htmlFor={name}>\n        {label}\n      </label>\n      <Field id={name} name={name} {...rest} />\n      <ErrorMessage name={name} component=\"p\" className=\"error\" />\n    </div>\n  );\n};\n\nexport default FormikInput;\n","import { ErrorMessage, Field } from 'formik';\n\nconst FormikSelect = props => {\n  const { label, name, options, ...rest } = props;\n\n  return (\n    <div className=\"form-control\">\n      <label className=\"form-label\" htmlFor={name}>\n        {label}\n      </label>\n      <Field as=\"select\" id={name} name={name} {...rest}>\n        <option value=\"not selected\">Not selected</option>\n        <option value=\"male\">Male</option>\n        <option value=\"female\">Female</option>\n      </Field>\n      <ErrorMessage name={name} component=\"p\" className=\"error\" />\n    </div>\n  );\n};\n\nexport default FormikSelect;\n","import FormikDatePicker from './FormikDatePicker';\nimport FormikInput from './FormikInput';\nimport FormikSelect from './FormikSelect';\n\nconst FormikControl = props => {\n  const { control, ...rest } = props;\n\n  switch (control) {\n    case 'input':\n      return <FormikInput {...rest} />;\n    case 'select':\n      return <FormikSelect {...rest} />;\n    case 'date':\n      return <FormikDatePicker {...rest} />;\n    default:\n      return null;\n  }\n};\n\nexport default FormikControl;\n","// extracted by mini-css-extract-plugin\nexport default {\"box-title\":\"PageTitle_box-title__P-Tml\",\"title\":\"PageTitle_title__6+XKw\"};","import scss from './PageTitle.module.scss';\n\nconst PageTitle = ({ name }) => {\n  return (\n    <div className={scss['box-title']}>\n      <h1 className={scss.title}>{name}</h1>\n    </div>\n  );\n};\n\nexport default PageTitle;\n","import { Formik, Form } from 'formik';\nimport { date, object, string } from 'yup';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { editProfile } from '../../redux/operations';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport FormikControl from '../formik/FormikControl';\nimport './EditProfileForm.scss';\nimport { format, parse } from 'date-fns';\n\nconst schema = object({\n  name: string().trim().required('This is a required field'),\n  gender: string().trim().required('This is a required field'),\n  age: date().required('This is a required field'),\n  phone: string().trim().required('This is a required field'),\n  email: string().trim().required('This is a required field'),\n});\n\nconst EditProfileForm = ({ items, closeForm }) => {\n  const { name, gender, age, phone, email } = items;\n  const { uid } = useSelector(state => state.auth);\n  const dispatch = useDispatch();\n\n  const initialValues = {\n    name,\n    gender: gender === '' ? 'Not selected' : gender,\n    age: age === '' ? '' : parse(age, 'dd.MM.yyyy', new Date()),\n    phone,\n    email,\n  };\n\n  const handleSubmit = values => {\n    const dateString = format(values.age, 'dd.MM.yyyy');\n    dispatch(editProfile({ uid, values: { ...values, age: dateString } }));\n    closeForm(false);\n  };\n\n  return (\n    <div className=\"edit-form-wrapper\">\n      <button className=\"close-button\" onClick={() => closeForm(false)}>\n        Close\n      </button>\n      <Formik\n        initialValues={initialValues}\n        validationSchema={schema}\n        onSubmit={handleSubmit}\n      >\n        {() => (\n          <Form className=\"edit-form\">\n            <FormikControl\n              className=\"edit-form-input\"\n              control=\"input\"\n              type=\"text\"\n              label=\"Name\"\n              name=\"name\"\n            />\n            <FormikControl\n              className=\"edit-form-input\"\n              control=\"select\"\n              label=\"Gender\"\n              name=\"gender\"\n            />\n\n            <FormikControl\n              className=\"edit-form-input\"\n              control=\"date\"\n              label=\"Age\"\n              name=\"age\"\n            />\n\n            <FormikControl\n              className=\"edit-form-input\"\n              control=\"input\"\n              type=\"text\"\n              label=\"Phone\"\n              name=\"phone\"\n            />\n            <FormikControl\n              className=\"edit-form-input\"\n              control=\"input\"\n              type=\"email\"\n              label=\"Email\"\n              name=\"email\"\n            />\n            <button type=\"submit\">Submit</button>\n          </Form>\n        )}\n      </Formik>\n    </div>\n  );\n};\n\nexport default EditProfileForm;\n","import { useTranslation } from 'react-i18next';\nimport userAvatar from '../../assets/images/user-avatar.png';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { logOut } from '../../redux/auth/operations';\nimport './UserCard.scss';\nimport EditProfileForm from '../editProfileForm';\nimport { useState } from 'react';\n\nconst UserCard = () => {\n  const [isOpenEditForm, setIsOpenEditForm] = useState(false);\n  const { t } = useTranslation();\n  const dispatch = useDispatch();\n  const { items, isLoading } = useSelector(state => state.data);\n\n  const handleClick = () => {\n    dispatch(logOut());\n  };\n\n  return (\n    <>\n      {isLoading && (\n        <div className=\"user-card\">\n          <div className=\"info-block\">\n            <div>\n              <img\n                className=\"user-avatar\"\n                src={userAvatar}\n                alt=\"default-user-avatar\"\n              />\n              <div className=\"buttons-block\">\n                <button className=\"change-avatar-btn\">\n                  {t('account.change-avatar-btn')}\n                </button>\n                <button\n                  className=\"setting-btn\"\n                  onClick={() => setIsOpenEditForm(true)}\n                >\n                  {t('account.settings-btn')}\n                </button>\n              </div>\n            </div>\n            <ul className=\"info-list\">\n              <li className=\"info-item\">\n                <p>\n                  <span className=\"text\">{items.name}</span>\n                </p>\n              </li>\n              <li className=\"info-item\">\n                <p>\n                  <span className=\"text\">{t('account.sex')}: </span>\n                  <span className=\"text-info\"> {items.gender}</span>\n                </p>\n              </li>\n              <li className=\"info-item\">\n                <p>\n                  <span className=\"text\">{t('account.date-birth')}: </span>\n                  <span className=\"text-info\"> {items.age}</span>\n                </p>\n              </li>\n              <li className=\"info-item\">\n                <p>\n                  <span className=\"text\">{t('account.phone')}: </span>\n                  <span className=\"text-info\"> {items.phone}</span>\n                </p>\n              </li>\n              <li className=\"info-item\">\n                <p>\n                  <span className=\"text\">{t('account.email')}: </span>\n                  <span className=\"text-info\">{items.email}</span>\n                </p>\n              </li>\n            </ul>\n          </div>\n          <button className=\"exit-btn\" onClick={handleClick}>\n            {t('account.exit-btn')}\n          </button>\n          {isOpenEditForm && (\n            <EditProfileForm items={items} closeForm={setIsOpenEditForm} />\n          )}\n        </div>\n      )}\n    </>\n  );\n};\n\nexport default UserCard;\n","import { Form, Formik } from 'formik';\nimport { object, string } from 'yup';\nimport { useDispatch } from 'react-redux';\nimport { login } from '../../redux/auth/operations';\nimport FormikControl from '../formik/FormikControl';\nimport './LoginForm.scss';\n\nconst schema = object({\n  email: string().trim().required('Email is a required field'),\n  password: string().trim().required('Password is a required field'),\n});\n\nconst LoginForm = () => {\n  const dispatch = useDispatch();\n\n  const initialValues = {\n    email: '',\n    password: '',\n  };\n\n  const handleSubmit = (values, actions) => {\n    dispatch(login(values));\n    actions.resetForm();\n  };\n\n  return (\n    <Formik\n      initialValues={initialValues}\n      validationSchema={schema}\n      onSubmit={handleSubmit}\n    >\n      <Form className=\"login-form\">\n        <h1 className=\"login-form__title\">User Log in</h1>\n        <FormikControl\n          className=\"login-form__input\"\n          control=\"input\"\n          type=\"email\"\n          label=\"Email\"\n          name=\"email\"\n        />\n        <FormikControl\n          className=\"login-form__input\"\n          control=\"input\"\n          type=\"password\"\n          label=\"Password\"\n          name=\"password\"\n        />\n\n        <button className=\"login-form__button\" type=\"submit\">\n          Log in\n        </button>\n      </Form>\n    </Formik>\n  );\n};\n\nexport default LoginForm;\n","import { Form, Formik } from 'formik';\nimport { object, string } from 'yup';\nimport './RegisterForm.scss';\nimport { useDispatch } from 'react-redux';\nimport { register } from '../../redux/auth/operations';\nimport FormikControl from '../formik/FormikControl';\n\nconst schema = object({\n  name: string().trim().required('Name is a required field'),\n  email: string().trim().required('Email is a required field'),\n  password: string().trim().required('Password is a required field'),\n});\n\nconst RegisterForm = () => {\n  const dispatch = useDispatch();\n\n  const initialValues = {\n    name: '',\n    email: '',\n    password: '',\n  };\n\n  const handleSubmit = async (values, actions) => {\n    dispatch(register(values));\n\n    actions.resetForm();\n  };\n\n  return (\n    <Formik\n      initialValues={initialValues}\n      validationSchema={schema}\n      onSubmit={handleSubmit}\n    >\n      <Form className=\"registration-form\">\n        <h1 className=\"registration-form__title\">User registration</h1>\n        <FormikControl\n          className=\"login-form__input\"\n          control=\"input\"\n          type=\"text\"\n          label=\"Name\"\n          name=\"name\"\n          placeholder=\"Enter your name\"\n        />\n\n        <FormikControl\n          className=\"login-form__input\"\n          control=\"input\"\n          type=\"email\"\n          label=\"Email\"\n          name=\"email\"\n          placeholder=\"Enter your email\"\n        />\n        <FormikControl\n          className=\"login-form__input\"\n          control=\"input\"\n          type=\"password\"\n          label=\"Password\"\n          name=\"password\"\n          placeholder=\"Enter your password\"\n        />\n        <button className=\"registration-form__button\" type=\"submit\">\n          Register\n        </button>\n      </Form>\n    </Formik>\n  );\n};\n\nexport default RegisterForm;\n","import { useRef, useState } from 'react';\nimport LoginForm from '../loginForm';\nimport RegisterForm from '../registerForm';\nimport { Link, useLocation } from 'react-router-dom';\nimport './Backdrop.scss';\n\nconst Backdrop = () => {\n  const [changeForm, setChangeForm] = useState(false);\n  const location = useLocation();\n  const backLinkHref = useRef(location.state?.from ?? '/');\n\n  const textButton = changeForm ? 'Login' : 'Register';\n\n  return (\n    <div className=\"backdrop\">\n      <Link className=\"backLink\" to={backLinkHref.current}></Link>\n      <div className=\"backdrop__content\">\n        {changeForm && <RegisterForm />}\n        {!changeForm && <LoginForm />}\n\n        <button\n          className=\"change-form-btn\"\n          onClick={() => setChangeForm(!changeForm)}\n        >\n          {textButton}\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default Backdrop;\n","import { Oval } from 'react-loader-spinner';\nimport './Loader.scss';\n\nconst Loader = () => {\n  return (\n    <div className=\"loader\">\n      <Oval\n        height={60}\n        width={60}\n        color=\"#202846\"\n        visible={true}\n        ariaLabel=\"oval-loading\"\n        secondaryColor=\"#2e3963\"\n        strokeWidth={4}\n        strokeWidthSecondary={4}\n      />\n    </div>\n  );\n};\n\nexport default Loader;\n","import { useTranslation } from 'react-i18next';\nimport PageTitle from '../../components/pageTitle';\nimport UserCard from '../../components/userCard';\nimport Backdrop from '../../components/backdrop';\nimport { useDispatch, useSelector } from 'react-redux';\nimport './PageAccount.scss';\nimport { useEffect } from 'react';\nimport { fetchUserData } from '../../redux/operations';\nimport Loader from '../../components/loader';\n\nconst PageAccount = () => {\n  const { t } = useTranslation();\n  const dispatch = useDispatch();\n  const { uid, token } = useSelector(state => state.auth);\n  const { isLoading } = useSelector(state => state.data);\n\n  useEffect(() => {\n    dispatch(fetchUserData(uid));\n  }, [dispatch, uid]);\n\n  return (\n    <div className=\"page-account\">\n      <PageTitle name={t('account.title')} />\n      <div className=\"container\">\n        {token ? <UserCard /> : <Backdrop />}\n        {!isLoading && <Loader />}\n      </div>\n    </div>\n  );\n};\n\nexport default PageAccount;\n"],"names":["props","label","name","rest","_jsxs","className","children","_jsx","htmlFor","Field","_ref","form","field","setFieldValue","value","DateView","id","selected","autocomplete","dateFormat","onChange","val","ErrorMessage","component","options","as","control","FormikInput","FormikSelect","FormikDatePicker","scss","schema","object","string","trim","required","gender","age","date","phone","email","items","closeForm","uid","useSelector","state","auth","dispatch","useDispatch","initialValues","parse","Date","onClick","Formik","validationSchema","onSubmit","values","dateString","format","editProfile","Form","FormikControl","type","UserCard","isOpenEditForm","setIsOpenEditForm","useState","t","useTranslation","isLoading","data","_Fragment","src","alt","handleClick","logOut","EditProfileForm","password","LoginForm","handleSubmit","actions","login","resetForm","RegisterForm","async","register","placeholder","Backdrop","_location$state$from","_location$state","changeForm","setChangeForm","location","useLocation","backLinkHref","useRef","from","textButton","Link","to","current","Loader","Oval","height","width","color","visible","ariaLabel","secondaryColor","strokeWidth","strokeWidthSecondary","PageAccount","token","useEffect","fetchUserData","PageTitle"],"sourceRoot":""}