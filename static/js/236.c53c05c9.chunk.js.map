{"version":3,"file":"static/js/236.c53c05c9.chunk.js","mappings":"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","sources":["webpack://vacation-time/./src/components/formik/Formik.module.scss?9562","components/formik/FormikDatePicker.js","components/formik/FormikInput.js","components/formik/FormikSelect.js","components/formik/FormikControl.js","webpack://vacation-time/./src/components/pageTitle/PageTitle.module.scss?4509","components/pageTitle/PageTitle.js","webpack://vacation-time/./src/components/editProfileForm/EditProfileForm.module.scss?f3d5","components/editProfileForm/EditProfileForm.js","webpack://vacation-time/./src/components/userCard/UserCard.module.scss?fc75","components/userCard/UserCard.js","webpack://vacation-time/./src/components/loginForm/LoginForm.module.scss?e584","components/loginForm/LoginForm.js","webpack://vacation-time/./src/components/registerForm/RegisterForm.module.scss?ab97","components/registerForm/RegisterForm.js","webpack://vacation-time/./src/components/backdrop/Backdrop.module.scss?0797","components/backdrop/Backdrop.js","webpack://vacation-time/./src/components/loader/Loader.module.scss?34f5","components/loader/Loader.js","pages/pageAccount/PageAccount.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"control\":\"Formik_control__F96Aj\",\"label\":\"Formik_label__PQ4oW\",\"error\":\"Formik_error__VykRM\"};","import { ErrorMessage, Field } from 'formik';\nimport DateView from 'react-datepicker';\nimport styles from './Formik.module.scss';\n\nconst FormikDatePicker = props => {\n  const { label, name, ...rest } = props;\n\n  return (\n    <div className={styles.control}>\n      <label className={styles.label} htmlFor={name}>\n        {label}\n      </label>\n      <Field name={name}>\n        {({ form, field }) => {\n          const { setFieldValue } = form;\n          const { value } = field;\n\n          return (\n            <DateView\n              id={name}\n              {...field}\n              {...rest}\n              selected={value}\n              autocomplete=\"off\"\n              dateFormat=\"dd.MM.yyyy\"\n              onChange={val => setFieldValue(name, val)}\n            />\n          );\n        }}\n      </Field>\n      <ErrorMessage name={name} component=\"p\" className={styles.error} />\n    </div>\n  );\n};\n\nexport default FormikDatePicker;\n","import { ErrorMessage, Field } from 'formik';\nimport styles from './Formik.module.scss';\n\nconst FormikInput = props => {\n  const { label, name, ...rest } = props;\n  return (\n    <div className={styles.control}>\n      <label className={styles.label} htmlFor={name}>\n        {label}\n      </label>\n      <Field id={name} name={name} {...rest} />\n      <ErrorMessage name={name} component=\"p\" className={styles.error} />\n    </div>\n  );\n};\n\nexport default FormikInput;\n","import { ErrorMessage, Field } from 'formik';\nimport styles from './Formik.module.scss';\n\nconst FormikSelect = props => {\n  const { label, name, options, ...rest } = props;\n\n  return (\n    <div className={styles.control}>\n      <label className={styles.label} htmlFor={name}>\n        {label}\n      </label>\n      <Field as=\"select\" id={name} name={name} {...rest}>\n        <option value=\"not selected\">Not selected</option>\n        <option value=\"male\">Male</option>\n        <option value=\"female\">Female</option>\n      </Field>\n      <ErrorMessage name={name} component=\"p\" className={styles.error} />\n    </div>\n  );\n};\n\nexport default FormikSelect;\n","import FormikDatePicker from './FormikDatePicker';\nimport FormikInput from './FormikInput';\nimport FormikSelect from './FormikSelect';\n\nconst FormikControl = props => {\n  const { control, ...rest } = props;\n\n  switch (control) {\n    case 'input':\n      return <FormikInput {...rest} />;\n    case 'select':\n      return <FormikSelect {...rest} />;\n    case 'date':\n      return <FormikDatePicker {...rest} />;\n    default:\n      return null;\n  }\n};\n\nexport default FormikControl;\n","// extracted by mini-css-extract-plugin\nexport default {\"titleContainer\":\"PageTitle_titleContainer__s4Pv6\",\"title\":\"PageTitle_title__6+XKw\"};","import styles from './PageTitle.module.scss';\n\nconst PageTitle = ({ name }) => {\n  return (\n    <div className={styles.titleContainer}>\n      <h1 className={styles.title}>{name}</h1>\n    </div>\n  );\n};\n\nexport default PageTitle;\n","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"EditProfileForm_wrapper__AvobW\",\"closeButton\":\"EditProfileForm_closeButton__At5Tv\",\"form\":\"EditProfileForm_form__2gE8+\",\"input\":\"EditProfileForm_input__agZGv\"};","import { Formik, Form } from 'formik';\nimport { date, object, string } from 'yup';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { editProfile } from '../../redux/operations';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport FormikControl from '../formik/FormikControl';\nimport { format, parse } from 'date-fns';\nimport styles from './EditProfileForm.module.scss';\n\nconst schema = object({\n  name: string().trim().required('This is a required field'),\n  gender: string().trim().required('This is a required field'),\n  age: date().required('This is a required field'),\n  phone: string().trim().required('This is a required field'),\n  email: string().trim().required('This is a required field'),\n});\n\nconst EditProfileForm = ({ items, closeForm }) => {\n  const { name, gender, age, phone, email } = items;\n  const { uid } = useSelector(state => state.auth);\n  const dispatch = useDispatch();\n\n  const initialValues = {\n    name,\n    gender: gender === '' ? 'Not selected' : gender,\n    age: age === '' ? '' : parse(age, 'dd.MM.yyyy', new Date()),\n    phone,\n    email,\n  };\n\n  const handleSubmit = values => {\n    const dateString = format(values.age, 'dd.MM.yyyy');\n    dispatch(editProfile({ uid, values: { ...values, age: dateString } }));\n    closeForm(false);\n  };\n\n  return (\n    <div className={styles.wrapper}>\n      <button className={styles.closeButton} onClick={() => closeForm(false)}>\n        Close\n      </button>\n      <Formik\n        initialValues={initialValues}\n        validationSchema={schema}\n        onSubmit={handleSubmit}\n      >\n        {() => (\n          <Form className={styles.form}>\n            <FormikControl\n              className={styles.input}\n              control=\"input\"\n              type=\"text\"\n              label=\"Name\"\n              name=\"name\"\n            />\n            <FormikControl\n              className={styles.input}\n              control=\"select\"\n              label=\"Gender\"\n              name=\"gender\"\n            />\n\n            <FormikControl\n              className={styles.input}\n              control=\"date\"\n              label=\"Age\"\n              name=\"age\"\n            />\n\n            <FormikControl\n              className={styles.input}\n              control=\"input\"\n              type=\"text\"\n              label=\"Phone\"\n              name=\"phone\"\n            />\n            <FormikControl\n              className={styles.input}\n              control=\"input\"\n              type=\"email\"\n              label=\"Email\"\n              name=\"email\"\n            />\n            <button type=\"submit\">Submit</button>\n          </Form>\n        )}\n      </Formik>\n    </div>\n  );\n};\n\nexport default EditProfileForm;\n","// extracted by mini-css-extract-plugin\nexport default {\"content\":\"UserCard_content__cl+Jg\",\"infoContainer\":\"UserCard_infoContainer__sMKUh\",\"avatarImage\":\"UserCard_avatarImage__lcWHl\",\"buttonsContainer\":\"UserCard_buttonsContainer__-Iyc+\",\"list\":\"UserCard_list__9+aHj\",\"item\":\"UserCard_item__bbLgv\",\"label\":\"UserCard_label__EX734\",\"value\":\"UserCard_value__Iok54\",\"changeAvatarButton\":\"UserCard_changeAvatarButton__7yfpy\",\"settingButton\":\"UserCard_settingButton__Km2UW\",\"logoutButton\":\"UserCard_logoutButton__T809m\"};","import { useTranslation } from 'react-i18next';\nimport userAvatar from '../../assets/images/user-avatar.png';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { logOut } from '../../redux/auth/operations';\nimport EditProfileForm from '../editProfileForm';\nimport { useState } from 'react';\nimport styles from './UserCard.module.scss';\n\nconst UserCard = () => {\n  const [isOpenEditForm, setIsOpenEditForm] = useState(false);\n  const { t } = useTranslation();\n  const dispatch = useDispatch();\n  const { items, isLoading } = useSelector(state => state.data);\n\n  const handleClick = () => {\n    dispatch(logOut());\n  };\n\n  const userInfo = [\n    { value: items.name },\n    { label: t('account.sex'), value: items.gender },\n    { label: t('account.date-birth'), value: items.age },\n    { label: t('account.phone'), value: items.phone },\n    { label: t('account.email'), value: items.email },\n  ];\n\n  return (\n    <>\n      {isLoading && (\n        <div className={styles.content}>\n          <div className={styles.infoContainer}>\n            <div>\n              <img\n                className={styles.avatarImage}\n                src={userAvatar}\n                alt=\"default-user-avatar\"\n              />\n              <div className={styles.buttonsContainer}>\n                <button className={styles.changeAvatarButton}>\n                  {t('account.change-avatar-btn')}\n                </button>\n                <button\n                  className={styles.settingButton}\n                  onClick={() => setIsOpenEditForm(true)}\n                >\n                  {t('account.settings-btn')}\n                </button>\n              </div>\n            </div>\n            <ul className={styles.list}>\n              {userInfo.map(({ label, value }, index) => (\n                <li className={styles.item} key={index}>\n                  <p>\n                    {label && <span className={styles.label}>{label}: </span>}\n                    <span className={styles.value}> {value}</span>\n                  </p>\n                </li>\n              ))}\n            </ul>\n          </div>\n          <button className={styles.logoutButton} onClick={handleClick}>\n            {t('account.exit-btn')}\n          </button>\n          {isOpenEditForm && (\n            <EditProfileForm items={items} closeForm={setIsOpenEditForm} />\n          )}\n        </div>\n      )}\n    </>\n  );\n};\n\nexport default UserCard;\n\n// import { useTranslation } from 'react-i18next';\n// import userAvatar from '../../assets/images/user-avatar.png';\n// import { useDispatch, useSelector } from 'react-redux';\n// import { logOut } from '../../redux/auth/operations';\n// import EditProfileForm from '../editProfileForm';\n// import { useState } from 'react';\n// import styles from './UserCard.module.scss';\n\n// const UserCard = () => {\n//   const [isOpenEditForm, setIsOpenEditForm] = useState(false);\n//   const { t } = useTranslation();\n//   const dispatch = useDispatch();\n//   const { items, isLoading } = useSelector(state => state.data);\n\n//   const handleClick = () => {\n//     dispatch(logOut());\n//   };\n\n//   const userInfo = [\n//     { value: items.name },\n//     { label: t('account.sex'), value: items.gender },\n//     { label: t('account.date-birth'), value: items.age },\n//     { label: t('account.phone'), value: items.phone },\n//     { label: t('account.email'), value: items.email },\n//   ];\n\n//   return (\n//     <>\n//       {isLoading && (\n//         <div className=\"user-card\">\n//           <div className=\"info-block\">\n//             <div>\n//               <img\n//                 className=\"user-avatar\"\n//                 src={userAvatar}\n//                 alt=\"default-user-avatar\"\n//               />\n//               <div className=\"buttons-block\">\n//                 <button className=\"change-avatar-btn\">\n//                   {t('account.change-avatar-btn')}\n//                 </button>\n//                 <button\n//                   className=\"setting-btn\"\n//                   onClick={() => setIsOpenEditForm(true)}\n//                 >\n//                   {t('account.settings-btn')}\n//                 </button>\n//               </div>\n//             </div>\n//             <ul className=\"info-list\">\n//               {userInfo.map(({ label, value }) => (\n//                 <li className=\"info-item\">\n//                   <p>\n//                     {label && <span className=\"text\">{label}: </span>}\n//                     <span className=\"text-info\"> {value}</span>\n//                   </p>\n//                 </li>\n//               ))}\n//             </ul>\n//           </div>\n//           <button className=\"exit-btn\" onClick={handleClick}>\n//             {t('account.exit-btn')}\n//           </button>\n//           {isOpenEditForm && (\n//             <EditProfileForm items={items} closeForm={setIsOpenEditForm} />\n//           )}\n//         </div>\n//       )}\n//     </>\n//   );\n// };\n\n// export default UserCard;\n","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"LoginForm_form__0Zerh\",\"title\":\"LoginForm_title__2KTw+\",\"input\":\"LoginForm_input__xmST2\",\"button\":\"LoginForm_button__51Vjg\"};","import { Form, Formik } from 'formik';\nimport { object, string } from 'yup';\nimport { useDispatch } from 'react-redux';\nimport { login } from '../../redux/auth/operations';\nimport FormikControl from '../formik/FormikControl';\nimport styles from './LoginForm.module.scss';\n\nconst schema = object({\n  email: string().trim().required('Email is a required field'),\n  password: string().trim().required('Password is a required field'),\n});\n\nconst LoginForm = () => {\n  const dispatch = useDispatch();\n\n  const initialValues = {\n    email: '',\n    password: '',\n  };\n\n  const handleSubmit = (values, actions) => {\n    dispatch(login(values));\n    actions.resetForm();\n  };\n\n  return (\n    <Formik\n      initialValues={initialValues}\n      validationSchema={schema}\n      onSubmit={handleSubmit}\n    >\n      <Form className={styles.form}>\n        <h1 className={styles.title}>User Log in</h1>\n        <FormikControl\n          className={styles.input}\n          control=\"input\"\n          type=\"email\"\n          label=\"Email\"\n          name=\"email\"\n        />\n        <FormikControl\n          className={styles.input}\n          control=\"input\"\n          type=\"password\"\n          label=\"Password\"\n          name=\"password\"\n        />\n\n        <button className={styles.button} type=\"submit\">\n          Log in\n        </button>\n      </Form>\n    </Formik>\n  );\n};\n\nexport default LoginForm;\n","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"RegisterForm_form__MF3HO\",\"title\":\"RegisterForm_title__7i2xg\",\"input\":\"RegisterForm_input__lvo8Z\",\"button\":\"RegisterForm_button__4oc0x\"};","import { Form, Formik } from 'formik';\nimport { object, string } from 'yup';\nimport { useDispatch } from 'react-redux';\nimport { register } from '../../redux/auth/operations';\nimport FormikControl from '../formik/FormikControl';\nimport styles from './RegisterForm.module.scss';\n\nconst schema = object({\n  name: string().trim().required('Name is a required field'),\n  email: string().trim().required('Email is a required field'),\n  password: string().trim().required('Password is a required field'),\n});\n\nconst RegisterForm = () => {\n  const dispatch = useDispatch();\n\n  const initialValues = {\n    name: '',\n    email: '',\n    password: '',\n  };\n\n  const handleSubmit = async (values, actions) => {\n    dispatch(register(values));\n\n    actions.resetForm();\n  };\n\n  return (\n    <Formik\n      initialValues={initialValues}\n      validationSchema={schema}\n      onSubmit={handleSubmit}\n    >\n      <Form className={styles.form}>\n        <h1 className={styles.title}>User registration</h1>\n        <FormikControl\n          className={styles.input}\n          control=\"input\"\n          type=\"text\"\n          label=\"Name\"\n          name=\"name\"\n          placeholder=\"Enter your name\"\n        />\n\n        <FormikControl\n          className={styles.input}\n          control=\"input\"\n          type=\"email\"\n          label=\"Email\"\n          name=\"email\"\n          placeholder=\"Enter your email\"\n        />\n        <FormikControl\n          className={styles.input}\n          control=\"input\"\n          type=\"password\"\n          label=\"Password\"\n          name=\"password\"\n          placeholder=\"Enter your password\"\n        />\n        <button className={styles.button} type=\"submit\">\n          Register\n        </button>\n      </Form>\n    </Formik>\n  );\n};\n\nexport default RegisterForm;\n","// extracted by mini-css-extract-plugin\nexport default {\"backdrop\":\"Backdrop_backdrop__Pin0W\",\"backLink\":\"Backdrop_backLink__nQCKi\",\"content\":\"Backdrop_content__mtD8z\",\"toggleButton\":\"Backdrop_toggleButton__1sOz9\"};","import { useRef, useState } from 'react';\nimport LoginForm from '../loginForm';\nimport RegisterForm from '../registerForm';\nimport { Link, useLocation } from 'react-router-dom';\nimport styles from './Backdrop.module.scss';\n\nconst Backdrop = () => {\n  const [isRegister, setIsRegister] = useState(false);\n  const location = useLocation();\n  const backLinkHref = useRef(location.state?.from ?? '/');\n\n  const toggleForm = () => setIsRegister(prev => !prev);\n  const buttonText = isRegister ? 'Login' : 'Register';\n\n  return (\n    <div className={styles.backdrop}>\n      <Link className={styles.backLink} to={backLinkHref.current} />\n      <div className={styles.content}>\n        {isRegister ? <RegisterForm /> : <LoginForm />}\n        <button className={styles.toggleButton} onClick={toggleForm}>\n          {buttonText}\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default Backdrop;\n","// extracted by mini-css-extract-plugin\nexport default {\"loader\":\"Loader_loader__pvYRd\"};","import { Oval } from 'react-loader-spinner';\nimport styles from './Loader.module.scss';\n\nconst Loader = () => {\n  return (\n    <div className={styles.loader}>\n      <Oval\n        height={60}\n        width={60}\n        color=\"#202846\"\n        visible={true}\n        ariaLabel=\"oval-loading\"\n        secondaryColor=\"#2e3963\"\n        strokeWidth={4}\n        strokeWidthSecondary={4}\n      />\n    </div>\n  );\n};\n\nexport default Loader;\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useTranslation } from 'react-i18next';\nimport PageTitle from '../../components/pageTitle';\nimport UserCard from '../../components/userCard';\nimport Backdrop from '../../components/backdrop';\nimport { fetchUserData } from '../../redux/operations';\nimport Loader from '../../components/loader';\n\nconst PageAccount = () => {\n  const { t } = useTranslation();\n  const dispatch = useDispatch();\n  const { uid, token } = useSelector(state => state.auth);\n  const { isLoading } = useSelector(state => state.data);\n\n  useEffect(() => {\n    dispatch(fetchUserData(uid));\n  }, [dispatch, uid]);\n\n  return (\n    <div>\n      <PageTitle name={t('account.title')} />\n      <div className=\"container\">\n        {token ? <UserCard /> : <Backdrop />}\n        {!isLoading && <Loader />}\n      </div>\n    </div>\n  );\n};\n\nexport default PageAccount;\n"],"names":["props","label","name","rest","_jsxs","className","styles","children","_jsx","htmlFor","Field","_ref","form","field","setFieldValue","value","DateView","id","selected","autocomplete","dateFormat","onChange","val","ErrorMessage","component","options","as","control","FormikInput","FormikSelect","FormikDatePicker","schema","object","string","trim","required","gender","age","date","phone","email","items","closeForm","uid","useSelector","state","auth","dispatch","useDispatch","initialValues","parse","Date","onClick","Formik","validationSchema","onSubmit","values","dateString","format","editProfile","Form","FormikControl","type","UserCard","isOpenEditForm","setIsOpenEditForm","useState","t","useTranslation","isLoading","data","userInfo","_Fragment","src","alt","map","index","handleClick","logOut","EditProfileForm","password","LoginForm","handleSubmit","actions","login","resetForm","RegisterForm","async","register","placeholder","Backdrop","_location$state$from","_location$state","isRegister","setIsRegister","location","useLocation","backLinkHref","useRef","from","buttonText","Link","to","current","toggleForm","prev","Loader","Oval","height","width","color","visible","ariaLabel","secondaryColor","strokeWidth","strokeWidthSecondary","PageAccount","token","useEffect","fetchUserData","PageTitle"],"sourceRoot":""}