{"version":3,"file":"static/js/891.a6294ed1.chunk.js","mappings":"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","sources":["webpack://vacation-time/./src/components/formik/Formik.module.scss?9562","components/formik/FormikDatePicker.jsx","components/formik/FormikInput.jsx","components/formik/FormikMaskedInput.jsx","components/formik/FormikSelect.jsx","components/formik/FormikControl.jsx","components/formik/schemas.js","firebase/APIFirebase.js","webpack://vacation-time/./src/components/sectionMainPoster/SectionMainPoster.module.scss?fc2f","components/sectionMainPoster/SectionMainPoster.jsx","webpack://vacation-time/./src/components/slideSwiper/SlideSwiper.module.scss?06bb","components/slideSwiper/SlideSwiper.jsx","webpack://vacation-time/./src/components/forms/feedbackForm/FeedbackForm.module.scss?fcc5","components/forms/feedbackForm/FeedbackForm.jsx","webpack://vacation-time/./src/components/sectionSecondPoster/SectionSecondPoster.module.scss?1c8e","components/sectionSecondPoster/SectionSecondPoster.jsx","pages/pageHome/PageHome.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"control\":\"Formik_control__F96Aj\",\"label\":\"Formik_label__PQ4oW\",\"icon\":\"Formik_icon__O+hiU\",\"error\":\"Formik_error__VykRM\"};","import { ErrorMessage, Field } from 'formik';\nimport DateView from 'react-datepicker';\nimport styles from './Formik.module.scss';\n\nconst FormikDatePicker = ({ label, name, ...props }) => {\n  return (\n    <div className={styles.control}>\n      <label className={styles.label} htmlFor={name}>\n        {label}\n      </label>\n      <Field name={name} autocomplete=\"off\">\n        {({ form, field }) => {\n          const { setFieldValue } = form;\n          const { value } = field;\n\n          return (\n            <DateView\n              id={name}\n              {...field}\n              {...props}\n              showIcon\n              calendarIconClassname={styles.icon}\n              toggleCalendarOnIconClick\n              selected={value}\n              placeholderText=\"dd.MM.yyyy\"\n              dateFormat=\"dd.MM.yyyy\"\n              onChange={val => setFieldValue(name, val)}\n            />\n          );\n        }}\n      </Field>\n      <ErrorMessage name={name} component=\"p\" className={styles.error} />\n    </div>\n  );\n};\n\nexport default FormikDatePicker;\n","import { ErrorMessage, Field } from 'formik';\nimport styles from './Formik.module.scss';\n\nconst FormikInput = props => {\n  const { label, name, ...rest } = props;\n  return (\n    <div className={styles.control}>\n      <label className={styles.label} htmlFor={name}>\n        {label}\n      </label>\n      <Field id={name} name={name} {...rest} />\n      <ErrorMessage name={name} component=\"p\" className={styles.error} />\n    </div>\n  );\n};\n\nexport default FormikInput;\n","import { ErrorMessage, Field } from 'formik';\nimport { InputMask } from 'primereact/inputmask';\nimport styles from './Formik.module.scss';\n\nconst FormikMaskedInput = props => {\n  const { label, name, ...rest } = props;\n\n  return (\n    <div className={styles.control}>\n      <label className={styles.label} htmlFor={name}>\n        {label}\n      </label>\n      <Field name={name}>\n        {({ field }) => {\n          return (\n            <InputMask\n              {...field}\n              {...rest}\n              id={name}\n              mask=\"+38(099) 999-9999\"\n              placeholder=\"+38(099) 999-9999\"\n            ></InputMask>\n          );\n        }}\n      </Field>\n      <ErrorMessage name={name} component=\"p\" className={styles.error} />\n    </div>\n  );\n};\n\nexport default FormikMaskedInput;\n","import { ErrorMessage, Field } from 'formik';\nimport Select from 'react-select';\nimport styles from './Formik.module.scss';\n\nconst customStyles = {\n  control: provided => ({\n    ...provided,\n    flex: '1',\n    height: '100%',\n    marginLeft: '-11px',\n    cursor: 'pointer',\n    border: 'none',\n    backgroundColor: '#fff',\n    boxShadow: 'none',\n  }),\n  option: provided => ({\n    ...provided,\n    cursor: 'pointer',\n    color: 'inherit',\n    borderBottom: '1px solid #ddd',\n    backgroundColor: 'inherit',\n\n    '&:last-child': {\n      borderBottom: 'none',\n    },\n\n    '&:hover': {\n      backgroundColor: '#444765',\n      color: '#fff',\n    },\n  }),\n  menu: provided => ({\n    ...provided,\n    left: '0',\n  }),\n};\n\nconst FormikSelect = props => {\n  const { label, name, options, ...rest } = props;\n\n  return (\n    <div className={styles.control}>\n      <label className={styles.label} htmlFor={name}>\n        {label}\n      </label>\n      <Field name={name}>\n        {({ field, form }) => (\n          <Select\n            inputId={name}\n            {...rest}\n            {...field}\n            options={options}\n            styles={customStyles}\n            name={name}\n            value={options.find(option => option.value === field.value)}\n            onChange={option => form.setFieldValue(name, option.value)}\n            onBlur={field.onBlur}\n          />\n        )}\n      </Field>\n\n      <ErrorMessage name={name} component=\"p\" className={styles.error} />\n    </div>\n  );\n};\n\nexport default FormikSelect;\n","import FormikDatePicker from './FormikDatePicker';\nimport FormikInput from './FormikInput';\nimport FormikMaskedInput from './FormikMaskedInput';\nimport FormikSelect from './FormikSelect';\n\nconst FormikControl = props => {\n  const { control, ...rest } = props;\n\n  switch (control) {\n    case 'input':\n      return <FormikInput {...rest} />;\n    case 'select':\n      return <FormikSelect {...rest} />;\n    case 'date':\n      return <FormikDatePicker {...rest} />;\n    case 'phone':\n      return <FormikMaskedInput {...rest} />;\n    default:\n      return null;\n  }\n};\n\nexport default FormikControl;\n","import { date, object, string } from 'yup';\n\nexport const registerSchema = object({\n  name: string().trim().required('Name is a required field'),\n  email: string().trim().required('Email is a required field'),\n  password: string().trim().required('Password is a required field'),\n});\n\nexport const LoginSchema = object({\n  email: string().trim().required('Email is a required field'),\n  password: string().trim().required('Password is a required field'),\n});\n\nexport const EditSchema = object({\n  name: string().trim().required('This is a required field'),\n  gender: string().trim(),\n  dob: date(),\n  phone: string(),\n  email: string().trim().required('This is a required field'),\n});\n\nexport const feedbackSchema = object({\n  name: string().trim().required('Name is a required field'),\n  phone: string(),\n});\n","const { getHousesCollection } = require('./firebaseConfig');\n\nexport const fetchHouses = async (setHousesList, lng) => {\n  try {\n    const projects = await getHousesCollection(lng);\n    setHousesList(projects);\n  } catch (e) {\n    console.error(e);\n    alert(e.message);\n  }\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"content\":\"SectionMainPoster_content__RY2dv\",\"title\":\"SectionMainPoster_title__Y5U2H\",\"subTitle\":\"SectionMainPoster_subTitle__Cxk2R\"};","import { useTranslation } from 'react-i18next';\nimport styles from './SectionMainPoster.module.scss';\n\nconst SectionMainPoster = () => {\n  const { t } = useTranslation();\n\n  return (\n    <section>\n      <div className=\"container\">\n        <div className={styles.content}>\n          <h1 className={styles.title}>VacationTime</h1>\n          <h2 className={styles.subTitle}>{t('main-poster.text')}</h2>\n        </div>\n      </div>\n    </section>\n  );\n};\n\nexport default SectionMainPoster;\n","// extracted by mini-css-extract-plugin\nexport default {\"mySwiper\":\"SlideSwiper_mySwiper__r4cIR\",\"imgBlock\":\"SlideSwiper_imgBlock__micD2\",\"blockDesc\":\"SlideSwiper_blockDesc__yJ8EE\",\"text\":\"SlideSwiper_text__KlDjU\",\"button\":\"SlideSwiper_button__ekn9L\",\"swiperButtonPrev\":\"SlideSwiper_swiperButtonPrev__zuHgK\",\"swiperButtonNext\":\"SlideSwiper_swiperButtonNext__HaX7O\",\"swiper-pagination\":\"SlideSwiper_swiper-pagination__-GoEp\",\"swiperPaginationBullet\":\"SlideSwiper_swiperPaginationBullet__r9psH\",\"swiperPaginationBulletActive\":\"SlideSwiper_swiperPaginationBulletActive__vUhmb\"};","import { Link } from 'react-router-dom';\nimport { useTranslation } from 'react-i18next';\nimport { Swiper, SwiperSlide } from 'swiper/react';\nimport { Pagination, Navigation } from 'swiper/modules';\nimport icons from '../../assets/images/icons.svg';\nimport 'swiper/scss';\nimport styles from './SlideSwiper.module.scss';\n\nconst SlideSwiper = ({ housesList }) => {\n  const { t } = useTranslation();\n\n  const adaptedText = text =>\n    text.length > 177 ? text.slice(0, 177) + '...' : text;\n\n  return (\n    <section>\n      <div className=\"container\">\n        <Swiper {...swiperConfig}>\n          {housesList.map(el => (\n            <SwiperSlide key={el.id}>\n              <div className={styles.imgBlock}>\n                <img src={el.picture} alt=\"house\" width={1233} height={600} />\n              </div>\n\n              <div className={styles.blockDesc}>\n                <p className={styles.text}>{adaptedText(el.text)}</p>\n                <Link className={styles.button} to={`/reserve/house-${el.id}`}>\n                  {t('swiper.button')}\n                  <svg width={28} height={14}>\n                    <use href={`${icons}#icon-arrow`}></use>\n                  </svg>\n                </Link>\n              </div>\n            </SwiperSlide>\n          ))}\n\n          <div className={styles.swiperButtonPrev}>\n            <svg className={styles.icon} width={51} height={101}>\n              <use href={`${icons}#button-swiper-nav`}></use>\n            </svg>\n          </div>\n          <div className={styles.swiperButtonNext}>\n            <svg className={styles.icon} width={51} height={101}>\n              <use href={`${icons}#button-swiper-nav`}></use>\n            </svg>\n          </div>\n          <div className={styles['swiper-pagination']}></div>\n        </Swiper>\n      </div>\n    </section>\n  );\n};\n\nexport default SlideSwiper;\n\nconst swiperConfig = {\n  slidesPerView: 1,\n  spaceBetween: 30,\n  loop: false,\n  pagination: {\n    clickable: true,\n    el: `.${styles['swiper-pagination']}`,\n    bulletClass: `${styles.swiperPaginationBullet}`,\n    bulletActiveClass: `${styles.swiperPaginationBulletActive}`,\n  },\n  navigation: {\n    prevEl: `.${styles.swiperButtonPrev}`,\n    nextEl: `.${styles.swiperButtonNext}`,\n  },\n  modules: [Pagination, Navigation],\n  className: styles.mySwiper,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"FeedbackForm_form__sW4yv\",\"title\":\"FeedbackForm_title__0JxQX\",\"blockInput\":\"FeedbackForm_blockInput__Atfux\",\"input\":\"FeedbackForm_input__VBRr1\",\"button\":\"FeedbackForm_button__32hpy\"};","import { Form, Formik } from 'formik';\nimport { feedbackSchema } from 'components/formik/schemas';\nimport { useTranslation } from 'react-i18next';\nimport Notiflix from 'notiflix';\nimport FormikControl from '../../formik/FormikControl';\nimport styles from './FeedbackForm.module.scss';\n\nNotiflix.Report.init({\n  width: '360px',\n  svgSize: '60px',\n  messageFontSize: '16px',\n  success: {\n    svgColor: '#008000',\n    buttonBackground: '#2e3963',\n    backOverlayColor: '#552db133',\n  },\n});\n\nconst FeedbackForm = () => {\n  const { t } = useTranslation();\n\n  const initialValues = {\n    name: '',\n    phone: '',\n  };\n\n  const handleSubmit = async (values, actions) => {\n    Notiflix.Report.success(\n      `${t('notiflix.title')}, ${values.name}!`,\n      `${t('notiflix.message')} ${values.phone}`,\n      'OK'\n    );\n\n    actions.resetForm();\n  };\n\n  return (\n    <section>\n      <div className=\"container\">\n        <Formik\n          initialValues={initialValues}\n          validationSchema={feedbackSchema}\n          onSubmit={handleSubmit}\n        >\n          <Form className={styles.form}>\n            <h3 className={styles.title}>{t('feedbackForm.title')}</h3>\n            <div className={styles.blockInput}>\n              <FormikControl\n                className={styles.input}\n                control=\"input\"\n                type=\"text\"\n                label={t('feedbackForm.name')}\n                name=\"name\"\n                placeholder={t('feedbackForm.placeholderName')}\n              />\n              <FormikControl\n                className={styles.input}\n                control=\"phone\"\n                type=\"text\"\n                label={t('feedbackForm.phone')}\n                name=\"phone\"\n              />\n            </div>\n            <button className={styles.button} type=\"submit\">\n              {t('feedbackForm.button')}\n            </button>\n          </Form>\n        </Formik>\n      </div>\n    </section>\n  );\n};\n\nexport default FeedbackForm;\n","// extracted by mini-css-extract-plugin\nexport default {\"content\":\"SectionSecondPoster_content__Zdex9\",\"text\":\"SectionSecondPoster_text__uTF5y\"};","import { useTranslation } from 'react-i18next';\nimport image from '../../assets/images/second-poster.jpg';\nimport styles from './SectionSecondPoster.module.scss';\n\nconst SectionSecondPoster = () => {\n  const { t } = useTranslation();\n\n  return (\n    <section>\n      <div className=\"container\">\n        <div className={styles.content}>\n          <img src={image} alt=\"man and women\" width={580} />\n          <p className={styles.text}>{t('second-poster.text')}</p>\n        </div>\n      </div>\n    </section>\n  );\n};\n\nexport default SectionSecondPoster;\n","import { useEffect, useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { fetchHouses } from '../../firebase/APIFirebase';\nimport SectionMainPoster from '../../components/sectionMainPoster';\nimport SlideSwiper from '../../components/slideSwiper';\nimport FeedbackForm from 'components/forms/feedbackForm/FeedbackForm';\nimport SectionSecondPoster from '../../components/sectionSecondPoster';\n\nconst PageHome = () => {\n  const [housesList, setHousesList] = useState([]);\n  const { i18n } = useTranslation();\n  const lng = i18n.resolvedLanguage;\n\n  useEffect(() => {\n    fetchHouses(setHousesList, lng);\n  }, [lng]);\n\n  return (\n    <>\n      <SectionMainPoster />\n      <SlideSwiper housesList={housesList} />\n      <SectionSecondPoster />\n      <FeedbackForm />\n    </>\n  );\n};\n\nexport default PageHome;\n"],"names":["_ref","label","name","props","_jsxs","className","styles","children","_jsx","htmlFor","Field","autocomplete","_ref2","form","field","setFieldValue","value","DateView","id","showIcon","calendarIconClassname","toggleCalendarOnIconClick","selected","placeholderText","dateFormat","onChange","val","ErrorMessage","component","rest","InputMask","mask","placeholder","customStyles","control","provided","flex","height","marginLeft","cursor","border","backgroundColor","boxShadow","option","color","borderBottom","menu","left","options","Select","inputId","find","onBlur","FormikInput","FormikSelect","FormikDatePicker","FormikMaskedInput","registerSchema","object","string","trim","required","email","password","LoginSchema","EditSchema","gender","dob","date","phone","feedbackSchema","getHousesCollection","require","fetchHouses","async","setHousesList","lng","e","console","error","alert","message","SectionMainPoster","t","useTranslation","housesList","Swiper","swiperConfig","map","el","SwiperSlide","imgBlock","src","picture","alt","width","blockDesc","text","length","slice","Link","button","to","concat","href","icons","swiperButtonPrev","icon","swiperButtonNext","slidesPerView","spaceBetween","loop","pagination","clickable","bulletClass","swiperPaginationBullet","bulletActiveClass","swiperPaginationBulletActive","navigation","prevEl","nextEl","modules","Pagination","Navigation","mySwiper","Notiflix","init","svgSize","messageFontSize","success","svgColor","buttonBackground","backOverlayColor","FeedbackForm","Formik","initialValues","validationSchema","onSubmit","values","actions","resetForm","Form","FormikControl","type","SectionSecondPoster","image","PageHome","useState","i18n","resolvedLanguage","useEffect","_Fragment","SlideSwiper"],"sourceRoot":""}