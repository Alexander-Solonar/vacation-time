{"version":3,"file":"static/js/992.6b18792d.chunk.js","mappings":"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","sources":["webpack://vacation-time/./src/components/sectionMainPoster/SectionMainPoster.module.scss?fc2f","components/sectionMainPoster/SectionMainPoster.tsx","webpack://vacation-time/./src/components/slideSwiper/SlideSwiper.module.scss?06bb","components/slideSwiper/SlideSwiper.tsx","webpack://vacation-time/./src/components/feedbackForm/FeedbackForm.module.scss?2023","components/feedbackForm/FeedbackForm.tsx","webpack://vacation-time/./src/components/sectionSecondPoster/SectionSecondPoster.module.scss?1c8e","components/sectionSecondPoster/SectionSecondPoster.tsx","pages/pageHome/PageHome.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"content\":\"SectionMainPoster_content__RY2dv\",\"title\":\"SectionMainPoster_title__Y5U2H\",\"subTitle\":\"SectionMainPoster_subTitle__Cxk2R\"};","import { useTranslation } from 'react-i18next';\nimport scss from './SectionMainPoster.module.scss';\n\nconst SectionMainPoster = () => {\n  const { t } = useTranslation();\n\n  return (\n    <section className={scss['main-poster']}>\n      <div className=\"container\">\n        <div className={scss.content}>\n          <h1 className={scss.title}>VacationTime</h1>\n          <h2 className={scss.subTitle}>{t('main-poster.text')}</h2>\n        </div>\n      </div>\n    </section>\n  );\n};\n\nexport default SectionMainPoster;\n","// extracted by mini-css-extract-plugin\nexport default {\"mySwiper\":\"SlideSwiper_mySwiper__r4cIR\",\"blockDesc\":\"SlideSwiper_blockDesc__yJ8EE\",\"text\":\"SlideSwiper_text__KlDjU\",\"button\":\"SlideSwiper_button__ekn9L\",\"btn\":\"SlideSwiper_btn__7jm3-\"};","import { Swiper, SwiperSlide } from 'swiper/react';\nimport { Pagination, Navigation } from 'swiper/modules';\nimport { useTranslation } from 'react-i18next';\nimport icons from '../../assets/images/icons.svg';\nimport img from '../../assets/images/image 3.webp';\nimport 'swiper/scss';\n\nimport scss from './SlideSwiper.module.scss';\n\nconst array = [1, 2, 3, 4, 5, 6];\n\nconst SlideSwiper = () => {\n  const { t } = useTranslation();\n\n  const textInitial = t('swiper.text');\n\n  const text =\n    textInitial.length > 177 ? textInitial.slice(0, 177) + '...' : textInitial;\n\n  return (\n    <section className={scss['slide-swiper']}>\n      <div className=\"container\">\n        <Swiper\n          slidesPerView={1}\n          spaceBetween={30}\n          loop={true}\n          pagination={{\n            clickable: true,\n            el: '.swiper-pagination',\n          }}\n          navigation={{\n            prevEl: '.swiper-button-prev',\n            nextEl: '.swiper-button-next',\n          }}\n          modules={[Pagination, Navigation]}\n          className={scss.mySwiper}\n        >\n          {array.map(e => (\n            <SwiperSlide key={e}>\n              <div className={scss.content}>\n                <img src={img} alt=\"house\" />\n              </div>\n\n              <div className={scss.blockDesc}>\n                <p className={scss.text}>{text}</p>\n                <button className={scss.button}>\n                  {t('swiper.button')}\n                  <svg width={28} height={14}>\n                    <use href={`${icons}#icon-arrow`}></use>\n                  </svg>\n                </button>\n              </div>\n              <button className={scss.btn}>\n                {t('swiper.button')}\n                <svg className={scss.icon} width={24} height={10}>\n                  <use href={`${icons}#icon-arrow`}></use>\n                </svg>\n              </button>\n            </SwiperSlide>\n          ))}\n\n          <div className=\"swiper-button-prev\">\n            <svg className={scss.icon} width={51} height={101}>\n              <use href={`${icons}#button-swiper-nav`}></use>\n            </svg>\n          </div>\n          <div className=\"swiper-button-next\">\n            <svg className={scss.icon} width={51} height={101}>\n              <use href={`${icons}#button-swiper-nav`}></use>\n            </svg>\n          </div>\n          <div className=\"swiper-pagination\"></div>\n        </Swiper>\n      </div>\n    </section>\n  );\n};\n\nexport default SlideSwiper;\n","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"FeedbackForm_form__hLbme\",\"formTitle\":\"FeedbackForm_formTitle__3avtP\",\"blockInpit\":\"FeedbackForm_blockInpit__yxB9g\",\"label\":\"FeedbackForm_label__yGhKb\",\"input\":\"FeedbackForm_input__T4m1e\",\"button\":\"FeedbackForm_button__CL8SV\",\"error\":\"FeedbackForm_error__OITfa\"};","import { ErrorMessage, Field, Form, Formik, FormikHelpers } from 'formik';\nimport scss from './FeedbackForm.module.scss';\nimport { FC } from 'react';\nimport { object, string } from 'yup';\nimport { useTranslation } from 'react-i18next';\nimport Notiflix from 'notiflix';\n\nNotiflix.Report.init({\n  width: '360px',\n  svgSize: '60px',\n  messageFontSize: '16px',\n  success: {\n    svgColor: 'var(--primary-green-color)',\n    buttonBackground: 'var(--secondary-color)',\n    backOverlayColor: 'var(--fourth-color)',\n  },\n});\n\nexport interface FormFeedbackValues {\n  name: string;\n  phone: string;\n}\n\ninterface FormErrorProps {\n  name: string;\n}\n\nconst schema = object({\n  name: string().trim().required('Name is a required field'),\n  phone: string()\n    .trim()\n    .matches(/^\\+?3?8?(0\\d{9})$/, 'Invalid phone number')\n    .required('Phone is a required field'),\n});\n\nconst FormError: FC<FormErrorProps> = ({ name }) => {\n  return (\n    <ErrorMessage\n      name={name}\n      render={message => <p className={scss.error}>{message}</p>}\n    />\n  );\n};\n\nconst FeedbackForm = () => {\n  const { t } = useTranslation();\n\n  const initialValues = {\n    name: '',\n    phone: '',\n  };\n\n  const handleSubmit = async (\n    values: FormFeedbackValues,\n    actions: FormikHelpers<FormFeedbackValues>\n  ) => {\n    Notiflix.Report.success(\n      `${t('notiflix.title')}, ${values.name}!`,\n      `${t('notiflix.message')} ${values.phone}`,\n      'OK'\n    );\n\n    actions.resetForm();\n  };\n\n  return (\n    <section className={scss['feedback-form']}>\n      <div className=\"container\">\n        <Formik\n          initialValues={initialValues}\n          validationSchema={schema}\n          onSubmit={handleSubmit}\n        >\n          <Form className={scss.form}>\n            <h3 className={scss.formTitle}>{t('feedbackForm.title')}</h3>\n            <div className={scss.blockInpit}>\n              <label className={scss.label}>\n                {t('feedbackForm.name')}\n                <Field\n                  className={scss.input}\n                  type=\"text\"\n                  name=\"name\"\n                  placeholder={t('feedbackForm.placeholderName')}\n                />\n                <FormError name=\"name\" />\n              </label>\n              <label className={scss.label}>\n                {t('feedbackForm.phone')}\n                <Field\n                  className={scss.input}\n                  type=\"phone\"\n                  name=\"phone\"\n                  placeholder={t('feedbackForm.placeholderPhone')}\n                />\n                <FormError name=\"phone\" />\n              </label>\n            </div>\n            <button className={scss.button} type=\"submit\">\n              {t('feedbackForm.button')}\n            </button>\n          </Form>\n        </Formik>\n      </div>\n    </section>\n  );\n};\n\nexport default FeedbackForm;\n","// extracted by mini-css-extract-plugin\nexport default {\"content\":\"SectionSecondPoster_content__Zdex9\",\"text\":\"SectionSecondPoster_text__uTF5y\"};","import { useTranslation } from 'react-i18next';\nimport image from '../../assets/images/second-poster.jpg';\nimport scss from './SectionSecondPoster.module.scss';\n\nconst SectionSecondPoster = () => {\n  const { t } = useTranslation();\n\n  return (\n    <section className={scss['second-poster']}>\n      <div className=\"container\">\n        <div className={scss.content}>\n          <img src={image} alt=\"man and women\" width={580} />\n          <p className={scss.text}>{t('second-poster.text')}</p>\n        </div>\n      </div>\n    </section>\n  );\n};\n\nexport default SectionSecondPoster;\n","import SectionMainPoster from '../../components/sectionMainPoster';\nimport SlideSwiper from '../../components/slideSwiper';\nimport FeedbackForm from '../../components/feedbackForm';\nimport SectionSecondPoster from '../../components/sectionSecondPoster';\n\nconst PageHome = () => {\n  return (\n    <>\n      <SectionMainPoster />\n      <SlideSwiper />\n      <SectionSecondPoster />\n      <FeedbackForm />\n    </>\n  );\n};\n\nexport default PageHome;\n"],"names":["SectionMainPoster","t","useTranslation","_jsx","className","scss","children","_jsxs","content","title","subTitle","array","SlideSwiper","textInitial","text","length","slice","Swiper","slidesPerView","spaceBetween","loop","pagination","clickable","el","navigation","prevEl","nextEl","modules","Pagination","Navigation","mySwiper","map","e","SwiperSlide","src","img","alt","blockDesc","button","width","height","href","concat","icons","btn","icon","Notiflix","init","svgSize","messageFontSize","success","svgColor","buttonBackground","backOverlayColor","schema","object","name","string","trim","required","phone","matches","FormError","_ref","ErrorMessage","render","message","error","FeedbackForm","Formik","initialValues","validationSchema","onSubmit","async","values","actions","resetForm","Form","form","formTitle","blockInpit","label","Field","input","type","placeholder","SectionSecondPoster","image","PageHome","_Fragment"],"sourceRoot":""}